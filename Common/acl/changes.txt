修改历史列表：

------------------------------------------------------------------------
115) 2020.1.12 --- acl 3.5.1-1 版本发布！主要是优化了 ssl 模块的接口
114) 2020.1.9 --- acl 3.5.1 版本发布！
113) 2019.3.9 --- acl 3.5.0 版本发布！

112) 2019.3.7
112.1) compile: 在 Android Studio 3.3.2 环境中编译通过

111) 2018.4.29 --- acl 3.4.0 版本发布！

110) 2017.7.10
110.1) compile: 在 gcc7.1 上编译通过

109) 2017.6.2
109.1) feature: 调整 lib_acl/lib_protocol/lib_acl_cpp 下头文件的依赖关系为相对
路径，这样应用可以很灵活地包含 acl 的头文件

108) 2017.5.3
108.1) compile: 修复了在 Solaris(x86) 平台上的编译问题

107) 2017.4.22 --- acl 3.3.0 版本发布！
106) 2017.3.30
106.1) compile: 重新整理头文件中宏定义，以区别不同的编译方式

105) 2017.3.26
105.1) cmake 在 vs 开发环境中编译通过

104) 2017.3.25
104.1) 库名重命名：
lib_acl.a       --> libacl.a
lib_protocol.a  --> libprotocol.a
lib_acl_cpp.a   --> libacl_cpp.a
lib_fiber.a     --> libfiber.a
lib_fiber_cpp.a --> libfiber_acpp.a

103) 2017.3.10
103.1) compile: 在macosx 上编译时不必再添加预编译选项，会根据编译器的默认
的预定义宏自动进行识别编译平台

102) 2017.2.21
102.1) compile: 在 MSYS 编译通过
101) 2016.11.3 --- acl 3.2.2.2 版本发布！
100) 2016.11.2 --- acl 3.2.2.1 版本发布！
99) 2016.11.1 --- acl 3.2.2 版本发布！
98) 2016.9.7 --- acl 3.2.1 版本发布！
97) 2016.8.27 --- acl 3.2.0 版本发布！

96) 2016.4.30
96.1) compile: 将所有工程移植至 VC2015

95) 2016.4.16 --- acl 3.1.5 版本发布！

94) 2016.1.17 --- acl 3.1.4.4 版本发布！(修复了几处紧急 BUG)
93) 2015.12.29 --- acl 3.1.4.3 版本发布！(修复了几处紧急 BUG)
92) 2015.12.21 --- acl 3.1.4.2 版本发布！(修复了一处紧急 BUG)
91) 2015.12.21 --- acl 3.1.4.1 版本发布！(修复了几处紧急 BUG)
90) 2015.12.20 --- acl 3.1.4 版本发布！
89) 2015.11.4
89.1) 修改 Makefile，将 lib_acl, lib_protocol, lib_acl_cpp 三个库生成一个统一
的库：lib_acl_all.a, lib_acl_all.so，以便于使用

88) 2015.8.26 --- acl 3.1.3 版本发布！

87) 2015.5.21
87.1) 整个工程移植至 MINGW 环境中
86) 2015.5.9 --- acl 3.1.2 版本发布！
85) 2015.5.5
85.1) lib_acl_cpp/samples/disque: 测试分布式消息队列 disque 客户端库例子

84) 2015.4.25
84.1) app/redis_tools/redis_builder: 增加了当创建 redis 集群时，自动分配主从结点
的功能，同时遵守以下几个原则：
a、主从结点尽量不在同一主机上
b、所有主结点尽量均匀地分配在不同的主机上
c、所以从结点尽量均匀地分配在不同的主机上
84.2) app/redis_tools/redis_builder: 增加了 reshard 哈希槽的功能，这样当添加新的
结点时，通过此功能可以将集群中其它结点的哈希槽移动至该新加结点上

83) 2015.4.22
83.1) app/redis_tools/redis_builder: 当创建 redis 集群时，支持自动将主从结点
尽量分配在不同的 IP 地址上

82) 2015.4.19
82.1) app/redis_tools: 用于 redis 集群管理的工具

81) 2015.3.29 --- acl 3.1.1 版本发布！

80) 2015.2.8
80.1) 整个工程可以使用 clang/clang++ 编译通过，编译前需要设置环境变量
export MY_ENV_CC=clang 或 MY_ENV_CC=clnag++

79) 2015.2.7 --- acl 3.1.0 版本发布！
78) 2014.12.14 --- acl 3.0.22 版本发布！
77) 2014.12.1
77.1) 整理工程，将例子按功能进行分类

76) 2014.11.30
76.1) 将 samples 目录下的示例分别移动至 lib_acl 及 lib_protocol 目录下

75) 2014.10.30 --- acl 3.0.21 版本发布！
74) 2014.9.21
74.1) compile: app/net_tools 可以使用 VC2008, VC2010, VC2012 编译通过

73) 2014.9.20
73.1) compile: lib_dict, lib_tls 编译不过，主要是因为宏定义 ACL_MS_WINDOWS 没有被
定义，所以在 WIN32 下统一使用 WIN32 宏定义

72) 2014.8.26 --- acl 3.0.20 版本发布！
71) 2014.6.23 --- acl 3.0.19 版本发布！

70) 2014.5.27
70.1) 整理了工程 VC2003, VC2008, VC2010, VC2012

69) 2014.4.10
69.1) VC2008, VC2010, VC2012 工程文件中将例子分类分目录存放

68) 2014.4.7  --- acl 3.0.18 版本发布！
67) 2014.2.21 --- acl 3.0.17 版本发布！(因线程池库存在严重 BUG，所以发布此紧急版本)
66) 2014.2.17 --- acl 3.0.16 版本发布！
65) 2014.1.25 --- acl 3.0.15 版本发布！
64) 2014.1.11
64.1) 增加了针对 VC2008 的支持
63) 2013.12.7 --- acl 3.0.14 版本发布！
62) 2013.12.7
62.1) dist/master/sh/master.sh 修改该脚本程序以适应 solaris 运行环境

61) 2013.12.4
61.1) compile: 整个工程在 solaris 上编译通过

60) 2013.11.20
60.1) acl/Makefile: 在 Debian 下 uname -p 报错

59) 2013.11.7 整个工程由高版本的 gcc-4.8.2 编译通过

58) 2013.11.3 --- acl 3.0.13 版本发布！
57) 2013.10.3 --- acl 3.0.12 版本发布！

56) 2013.10.1 整理各个库的相关代码，使之更为规整，同时校验了绝大部分的测试
用例，从而为新版本的发布做好准备
55) 2013.9.27 lib_acl 事件引擎的相关接口修改
54) 整个 acl 工程在 gcc 4.7.1 编译通过
53) 2013.8.22 --- acl 3.0.11 版本发布！
52) 2013.6.25 --- acl 3.0.10 版本发布！

51) 2013.7.1
51.1) compile: unit_test 在 gcc4.6.3 上存在一些编译警告

50) 2013.6.25 --- acl 3.0.8 版本发布！
49) 2013.5.13 --- acl 3.0.7 版本发布！
48) 2013.3.22 --- acl 3.0.6 版本发布！

47) 2013.3.2
47.1) 将 lib_acl_cpp 目录下的 lib 和 bin 两个目录下的库移至上级目录下
47.2) 调整了 lib_acl_cpp/samples 下的示例在用 VC 编译时的工程文件
47.3) 在 app 目录下增加了 net_tools 工程

46) 2013.2.19
46.1) app: 增加了 gid 应用，该应用主要用于产生全局唯一 64 位长整型 ID，不仅
提供了 gid 服务器模块，同时还提供了 gid 客户端库(包含C/JAVA两个版本)

45) 2013.2.8 --- acl 3.0.5 版本发布！

44) 2012.12.31
44.1) app/wizard: 调整了一下 tmpl/master/ 下的接口方式

45) 2012.12.30
45.1) sample: 增加了 smtp_client 邮件发送客户端例子

44) 2012.12.26
44.1) 把 win32_build 目录下的内容移到 samples/ 目录下了。

43) 2012.7.17
43.1) compile: WIN32 下的编程环境可以支持 VC2010

42) 2012.7.10
42.1) compile: 用 VC2003 编译时，可以在 Debug/DebugDll/Release/ReleaseDll 下
使所有的例子编译通过

41) 2012.6.26
41.1) unit_test: stdlib/test_htable.c 编译有错

40) 2012.4.9
40.1) samples: 因为 lib_acl 的头文件中增加了针对变参类型匹配的编译开关，
由此检查出一些例子中存在的问题

39) !!!!!!!!!!!!!!!!! 2012.3.31 !!!!!!!!!!!!!!!!!
39.1) 将 acl_project 重新命名为 acl

38) 2012.3.26
38.1) samples: 在 samples/ 目录下增加了两个文件 Makefile.in 和
Makefile.in.cpp, 同时修改了各个示例的 Makefile

37) 2011.10.23
37.1) samples: 增加了 json 解析库的测试用例，参见 samples/json

36)
36.1) 为了与 VC 编辑器兼容，将所有的源文件和头文件都转成 DOS 方式，即回车
换行采用 \r\n，主要是 VIM 比较智能，它能根据文件的换行格式自动选取，而VC
就比较弱，虽然VC识别\n，但添加换行时只会添加\r\n

35) 2011.5.17
35.1) 版本号更新为 2.1.2_5

34) 2011.3.14: 2.1.2 版本正式发布

33) 2011.2.9
33.1) sample: 增加了 log/ 测试新的日志功能

32) 2010.9.30
32.1) sample: 增加了 resolve/ 测试DNS解析的例子以及 connect/ 进行远程
连接的例子

31) 2010.7.19
31.1) bugfix: master/aio_proxy/service_main.c, 释放异步流对象时有误
31.2) feature: master/aio_proxy/service_main.c, 可以配置是否按行读

30) 2010.7.6: 2.1.2 beta 1 发布
30.1) 增加了 xml/html 解析库
30.2) 增加了 xml 库的测试例子

29) 2010.6.8
29.1) samples: 增加了例子 vstream_unread 用于测试 acl_vstream_unread
及 acl_vstream_ungetc

28) 2010.4.27
28.1) samples: 增加了例子 master/aio_proxy

27) 2010.4.11: 2.1.1 正式版本发布

26) 2010.3.27
26.1) samples: aio/client, aio/server 增加了内存池选项

25) 2.1.1 rc1
因为ACL的event模块支持WIN32平台的IOCP接口，所以准备发布一个小版本,
这样在WIN32下就可以编写高并发的高效非阻塞服务器了

24) 2.1.0 版本正式发布了!

23) 2010.1.3
23.1) 整理 win32 平台下的工程，在VC6，VC2003，VC2008 下编译通过

22) 2010.1.1
22.1) 准备为发布 2.1.0 的正式稳定版本

21) 2009.11.13
21.1) 所有库的编译过程都加上 -fPIC 选项，从面便于动态链接及动态加载

20) 2009.11.12
20.1) 将版本号定为: 2.1.0.rc3

19) 2009.9.29
19.1) 将版本号定为: 2.1.0.rc2

18) 2009.9.21
18.1) 将版本号定为: 2.1.0.rc1

17) 2009.9.14
17.1) lib_tls/lib_dict: 均支持WIN32平台
17.2) 调整了VC的编译工程

16) 2009.8.16
16.1) samples: master/, 增加了一个例子 ioctl_echo3

15) 2009.7.30
15.1) lib_dict 增加了 tokyocabinet 的支持

14) 2009.7.24
14.1) 将版本号定为了 2.1.0.beta3

13) 2009.7.24
13.1) 将版本号定为了 2.1.0.beta2

12) 2009.7.14
12.1) lib_tls: 经过数周工作，lib_tls 终于可以工作了, 例子参见
samples/tls/
12.2) lib_tls 是完全从 Postfix 移植过来，相关 license 请参见
Postfix 的 license

11) 2009.7.3
11.1) 将 lib_dict, lib_tls 两个库并入 acl_project 中，这样
acl_project 将会支持以BDB/CDB, etc 为存储的快速查询，同时
acl_vstream 模块及以其为基础的通信模块将会方便地支持 ssl 协议
11.2) 因为本版本增加的内容较多，所以版本将会有个较大的提高，
本版本将会提升为 2.1.0
11.3) 因为随着 acl_project 中各个功能库的增加，在发布目录里将
会进行重新调整, 所以在 dist/ 目录下将不再有单独的 lib_acl, 
lib_project 两个目录，而是合而为一个存储目录，新的库也将统一
存储在该目录下

10) 2009.6.16
10.1) acl_project2.0.4 release now

9) 2009.5.27
9.1) 增加了 Makefile.glib 从而支持将 glib 编译进去

8) 2009.4.16
8.1) 因为CVS对上传文件名的限制，将所有的 .keep 文件修改为 keep

7) 2009.4.14
7.1) prepare for acl_project2.0.4

6) 2009.1.4
6.1) acl_project.2.02 版本发布, 主要是因为 acl_master
服务器框架现在支持配置重读功能
6.2) compile: 用VC编译动态库时报错误, 需要包含 ws2_32.lib

5) 2009.1.3
5.1) samples/ping: 增加了 ping 的一个实现

4) 2008.12.22
4.1) acl_project.2.01 版本发布

3) 2008.10.13
3.1) samples/http_client: 支持了重定向功能

2) 2008.10.10
2.1) samples/http_client: 完善了该例子

1) 2008.10.9
1.1) 正式将ACL工程命名为 acl_project.2.00 版本发布
