#pragma once

struct user
{
	user(const char* user_name, int user_age, bool user_male)
	: name(user_name)
	, age(user_age)
	, male(user_male)
	{}

	user() {}
	~user() {}

	//Gson@required
	std::string name;
	int  age;
	bool male;

	//Gson@optional
	std::string addr;

	user& set_name(const char* v)
	{
		name = v;
		return *this;
	}
	user& set_age(int v)
	{
		age = v;
		return *this;
	}
	user& set_male(bool v)
	{
		male = v;
		return *this;
	}

	const char* get_name(void) const
	{
		return name.c_str();
	}

	bool is_male(void) const
	{
		return male;
	}

	int get_age(void) const
	{
		return age;
	}

	//Gson@skip
	acl::string nick;
	user& set_nick(const char* v)
	{
		nick = v;
		return *this;
	}
};

struct group
{
	std::string name;
	std::vector<user> users;

	void set_name(const char* v)
	{
		name = v;
	}
};

struct company
{
	std::string name;
	std::string addr;
	std::vector<group> groups;
	std::map<acl::string, acl::string> users;
};
