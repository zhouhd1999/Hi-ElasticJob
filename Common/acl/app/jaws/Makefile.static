SHELL = /bin/sh
CC      = gcc
#CC      = g++
AR      = ar
ARFL    = rv
RANLIB  = ranlib

CFLAGS = -c -g -W -Wall -Wcast-align \
-Waggregate-return -Wmissing-prototypes \
-D_REENTRANT -D_POSIX_PTHREAD_SEMANTICS -D_USE_FAST_MACRO \
-Wno-long-long \
-Wpointer-arith -Werror -Wshadow -pedantic -O3 \
-fPIC -DJAWS_STATIC
#-Wcast-qual 
###########################################################
#Check system:
#       Linux, SunOS, Solaris, BSD variants, AIX, HP-UX
SYSLIB = -ldl
RPATH =

CHECKSYSRES = @echo "Unknow system type!";exit 1
UNIXNAME = $(shell uname -sm)
OSTYPE = $(shell uname -p)

#Path for Linux
ifeq ($(findstring Linux, $(UNIXNAME)), Linux)
#	ifeq ($CC, "gcc")
	ifeq ($(findstring i686, $(OSTYPE)), i686)
		RPATH = linux32
	endif
	ifeq ($(findstring x86_64, $(OSTYPE)), x86_64)
		RPATH = linux64
	endif
	ifeq ($(findstring gcc, $(CC)), gcc)
		CFLAGS += -Wstrict-prototypes
	endif
	CFLAGS += -DLINUX2
	SYSLIB += -lcrypt -lpthread
endif

#Path for SunOS
ifeq ($(findstring SunOS, $(UNIXNAME)), SunOS)
	ifeq ($(findstring i386, $(OSTYPE)), i386)
		RPATH = sunos_x86
	endif
	ifeq ($(findstring 86, $(UNIXNAME)), 86)
		SYSLIB += -lsocket -lnsl -lrt
	endif
	ifeq ($(findstring sun4u, $(UNIXNAME)), sun4u)
		SYSLIB += -lsocket -lnsl -lrt
	endif
#	ifeq ($CC, "gcc")
	ifeq ($(findstring gcc, $(CC)), gcc)
		CFLAGS += -Wstrict-prototypes
	endif
	CFLAGS += -DSUNOS5
endif

#Path for HP-UX
ifeq ($(findstring HP-UX, $(UNIXNAME)), HP-UX)
#	ifeq ($CC, "gcc")
	ifeq ($(findstring gcc, $(CC)), gcc)
		CFLAGS += -Wstrict-prototypes
	endif
	SYSLIB += -lpthread
	CFLAGS += -DHP_UX -DHPUX11
	PLAT_NAME=hp-ux
endif

#Find system type.
ifneq ($(SYSPATH),)
	CHECKSYSRES = @echo "System is $(shell uname -sm)"
endif
###########################################################
ACL_PATH = .
ACL_LIB  = $(ACL_PATH)/lib/$(RPATH)
ACL_INC  = $(ACL_PATH)/include/acl

PROTO_PATH = .
PROTO_LIB  = $(PROTO_PATH)/lib/$(RPATH)
PROTO_INC  = $(PROTO_PATH)/include/protocol

ALL_LIBS = -L$(PROTO_LIB) -l_protocol -L$(ACL_LIB) -l_acl $(SYSLIB)

INCLUDE = -I./module/mod_http -I./global -I$(PROTO_INC) -I$(ACL_INC)
CFLAGS += $(INCLUDE) -DHAVE_NO_STRCASESTR

OBJ_OUTPATH = ./debug

#Project's objs
SOURCES = $(wildcard ./global/*.c) \
	$(wildcard ./module/mod_http/*.c) \
	$(wildcard ./main/*.c)
OBJS = $(patsubst %.c, $(OBJ_OUTPATH)/%.o, $(notdir $(SOURCES)))

###########################################################
NAME  = jaws_static

.PHONY = RM all clean
COMPILE = $(CC) $(CFLAGS)

all: RM $(NAME)

RM:
	rm -f $(NAME)

$(NAME): $(OBJS)
	$(CC) -o $(NAME) $(OBJS) $(ALL_LIBS)
	cp $(NAME) main/

$(OBJ_OUTPATH)/%.o: ./main/%.c
	$(COMPILE) -o $@ $<
$(OBJ_OUTPATH)/%.o: ./global/%.c
	$(COMPILE) -o $@ $<
$(OBJ_OUTPATH)/%.o: ./module/mod_http/%.c
	$(COMPILE) -o $@ $<

clean:
	rm -f $(OBJS) $(NAME)

rebuild: clean all
