// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: elasticjob_worker_service.proto

#include "elasticjob_worker_service.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_elasticjob_5fworker_5fservice_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ErrorCode_elasticjob_5fworker_5fservice_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_elasticjob_5fworker_5fservice_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_JobResult_elasticjob_5fworker_5fservice_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_elasticjob_5fworker_5fservice_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_JobRunningInfo_elasticjob_5fworker_5fservice_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_elasticjob_5fworker_5fservice_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_WorkerAbility_elasticjob_5fworker_5fservice_2eproto;
namespace elasticjob_service {
class JobRunningInfoDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<JobRunningInfo> _instance;
} _JobRunningInfo_default_instance_;
class WorkerAbilityDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<WorkerAbility> _instance;
} _WorkerAbility_default_instance_;
class ErrorCodeDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ErrorCode> _instance;
} _ErrorCode_default_instance_;
class JobResultDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<JobResult> _instance;
} _JobResult_default_instance_;
class AddNewJobReuqestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<AddNewJobReuqest> _instance;
} _AddNewJobReuqest_default_instance_;
class AddNewJobReplyDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<AddNewJobReply> _instance;
} _AddNewJobReply_default_instance_;
class RegisterWorkerReqeustDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<RegisterWorkerReqeust> _instance;
} _RegisterWorkerReqeust_default_instance_;
class RegisterWorkerReplyDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<RegisterWorkerReply> _instance;
} _RegisterWorkerReply_default_instance_;
class DeregisterWorkerReqeustDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<DeregisterWorkerReqeust> _instance;
} _DeregisterWorkerReqeust_default_instance_;
class DeregisterWorkerReplyDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<DeregisterWorkerReply> _instance;
} _DeregisterWorkerReply_default_instance_;
class SendRunningJobsRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SendRunningJobsRequest> _instance;
} _SendRunningJobsRequest_default_instance_;
class SendRunningJobsReplyDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SendRunningJobsReply> _instance;
} _SendRunningJobsReply_default_instance_;
class SendJobResultRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SendJobResultRequest> _instance;
} _SendJobResultRequest_default_instance_;
class SendJobResultReplyDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SendJobResultReply> _instance;
} _SendJobResultReply_default_instance_;
class ExchangeJobRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ExchangeJobRequest> _instance;
} _ExchangeJobRequest_default_instance_;
class ExchangeJobReplyDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ExchangeJobReply> _instance;
} _ExchangeJobReply_default_instance_;
class SendStatsReqeustDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SendStatsReqeust> _instance;
} _SendStatsReqeust_default_instance_;
class SendStatsReplyDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SendStatsReply> _instance;
} _SendStatsReply_default_instance_;
}  // namespace elasticjob_service
static void InitDefaultsscc_info_AddNewJobReply_elasticjob_5fworker_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::elasticjob_service::_AddNewJobReply_default_instance_;
    new (ptr) ::elasticjob_service::AddNewJobReply();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::elasticjob_service::AddNewJobReply::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_AddNewJobReply_elasticjob_5fworker_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_AddNewJobReply_elasticjob_5fworker_5fservice_2eproto}, {
      &scc_info_ErrorCode_elasticjob_5fworker_5fservice_2eproto.base,}};

static void InitDefaultsscc_info_AddNewJobReuqest_elasticjob_5fworker_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::elasticjob_service::_AddNewJobReuqest_default_instance_;
    new (ptr) ::elasticjob_service::AddNewJobReuqest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::elasticjob_service::AddNewJobReuqest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_AddNewJobReuqest_elasticjob_5fworker_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_AddNewJobReuqest_elasticjob_5fworker_5fservice_2eproto}, {
      &scc_info_JobRunningInfo_elasticjob_5fworker_5fservice_2eproto.base,}};

static void InitDefaultsscc_info_DeregisterWorkerReply_elasticjob_5fworker_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::elasticjob_service::_DeregisterWorkerReply_default_instance_;
    new (ptr) ::elasticjob_service::DeregisterWorkerReply();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::elasticjob_service::DeregisterWorkerReply::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_DeregisterWorkerReply_elasticjob_5fworker_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_DeregisterWorkerReply_elasticjob_5fworker_5fservice_2eproto}, {
      &scc_info_ErrorCode_elasticjob_5fworker_5fservice_2eproto.base,}};

static void InitDefaultsscc_info_DeregisterWorkerReqeust_elasticjob_5fworker_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::elasticjob_service::_DeregisterWorkerReqeust_default_instance_;
    new (ptr) ::elasticjob_service::DeregisterWorkerReqeust();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::elasticjob_service::DeregisterWorkerReqeust::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_DeregisterWorkerReqeust_elasticjob_5fworker_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_DeregisterWorkerReqeust_elasticjob_5fworker_5fservice_2eproto}, {}};

static void InitDefaultsscc_info_ErrorCode_elasticjob_5fworker_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::elasticjob_service::_ErrorCode_default_instance_;
    new (ptr) ::elasticjob_service::ErrorCode();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::elasticjob_service::ErrorCode::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ErrorCode_elasticjob_5fworker_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ErrorCode_elasticjob_5fworker_5fservice_2eproto}, {}};

static void InitDefaultsscc_info_ExchangeJobReply_elasticjob_5fworker_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::elasticjob_service::_ExchangeJobReply_default_instance_;
    new (ptr) ::elasticjob_service::ExchangeJobReply();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::elasticjob_service::ExchangeJobReply::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_ExchangeJobReply_elasticjob_5fworker_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_ExchangeJobReply_elasticjob_5fworker_5fservice_2eproto}, {
      &scc_info_ErrorCode_elasticjob_5fworker_5fservice_2eproto.base,
      &scc_info_JobRunningInfo_elasticjob_5fworker_5fservice_2eproto.base,}};

static void InitDefaultsscc_info_ExchangeJobRequest_elasticjob_5fworker_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::elasticjob_service::_ExchangeJobRequest_default_instance_;
    new (ptr) ::elasticjob_service::ExchangeJobRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::elasticjob_service::ExchangeJobRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ExchangeJobRequest_elasticjob_5fworker_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ExchangeJobRequest_elasticjob_5fworker_5fservice_2eproto}, {}};

static void InitDefaultsscc_info_JobResult_elasticjob_5fworker_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::elasticjob_service::_JobResult_default_instance_;
    new (ptr) ::elasticjob_service::JobResult();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::elasticjob_service::JobResult::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_JobResult_elasticjob_5fworker_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_JobResult_elasticjob_5fworker_5fservice_2eproto}, {
      &scc_info_ErrorCode_elasticjob_5fworker_5fservice_2eproto.base,}};

static void InitDefaultsscc_info_JobRunningInfo_elasticjob_5fworker_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::elasticjob_service::_JobRunningInfo_default_instance_;
    new (ptr) ::elasticjob_service::JobRunningInfo();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::elasticjob_service::JobRunningInfo::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_JobRunningInfo_elasticjob_5fworker_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_JobRunningInfo_elasticjob_5fworker_5fservice_2eproto}, {}};

static void InitDefaultsscc_info_RegisterWorkerReply_elasticjob_5fworker_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::elasticjob_service::_RegisterWorkerReply_default_instance_;
    new (ptr) ::elasticjob_service::RegisterWorkerReply();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::elasticjob_service::RegisterWorkerReply::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_RegisterWorkerReply_elasticjob_5fworker_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_RegisterWorkerReply_elasticjob_5fworker_5fservice_2eproto}, {
      &scc_info_ErrorCode_elasticjob_5fworker_5fservice_2eproto.base,}};

static void InitDefaultsscc_info_RegisterWorkerReqeust_elasticjob_5fworker_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::elasticjob_service::_RegisterWorkerReqeust_default_instance_;
    new (ptr) ::elasticjob_service::RegisterWorkerReqeust();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::elasticjob_service::RegisterWorkerReqeust::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_RegisterWorkerReqeust_elasticjob_5fworker_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_RegisterWorkerReqeust_elasticjob_5fworker_5fservice_2eproto}, {
      &scc_info_WorkerAbility_elasticjob_5fworker_5fservice_2eproto.base,}};

static void InitDefaultsscc_info_SendJobResultReply_elasticjob_5fworker_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::elasticjob_service::_SendJobResultReply_default_instance_;
    new (ptr) ::elasticjob_service::SendJobResultReply();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::elasticjob_service::SendJobResultReply::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_SendJobResultReply_elasticjob_5fworker_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_SendJobResultReply_elasticjob_5fworker_5fservice_2eproto}, {
      &scc_info_ErrorCode_elasticjob_5fworker_5fservice_2eproto.base,}};

static void InitDefaultsscc_info_SendJobResultRequest_elasticjob_5fworker_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::elasticjob_service::_SendJobResultRequest_default_instance_;
    new (ptr) ::elasticjob_service::SendJobResultRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::elasticjob_service::SendJobResultRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_SendJobResultRequest_elasticjob_5fworker_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_SendJobResultRequest_elasticjob_5fworker_5fservice_2eproto}, {
      &scc_info_JobResult_elasticjob_5fworker_5fservice_2eproto.base,}};

static void InitDefaultsscc_info_SendRunningJobsReply_elasticjob_5fworker_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::elasticjob_service::_SendRunningJobsReply_default_instance_;
    new (ptr) ::elasticjob_service::SendRunningJobsReply();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::elasticjob_service::SendRunningJobsReply::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_SendRunningJobsReply_elasticjob_5fworker_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_SendRunningJobsReply_elasticjob_5fworker_5fservice_2eproto}, {
      &scc_info_ErrorCode_elasticjob_5fworker_5fservice_2eproto.base,}};

static void InitDefaultsscc_info_SendRunningJobsRequest_elasticjob_5fworker_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::elasticjob_service::_SendRunningJobsRequest_default_instance_;
    new (ptr) ::elasticjob_service::SendRunningJobsRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::elasticjob_service::SendRunningJobsRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_SendRunningJobsRequest_elasticjob_5fworker_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_SendRunningJobsRequest_elasticjob_5fworker_5fservice_2eproto}, {
      &scc_info_JobResult_elasticjob_5fworker_5fservice_2eproto.base,}};

static void InitDefaultsscc_info_SendStatsReply_elasticjob_5fworker_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::elasticjob_service::_SendStatsReply_default_instance_;
    new (ptr) ::elasticjob_service::SendStatsReply();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::elasticjob_service::SendStatsReply::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_SendStatsReply_elasticjob_5fworker_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_SendStatsReply_elasticjob_5fworker_5fservice_2eproto}, {
      &scc_info_ErrorCode_elasticjob_5fworker_5fservice_2eproto.base,}};

static void InitDefaultsscc_info_SendStatsReqeust_elasticjob_5fworker_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::elasticjob_service::_SendStatsReqeust_default_instance_;
    new (ptr) ::elasticjob_service::SendStatsReqeust();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::elasticjob_service::SendStatsReqeust::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_SendStatsReqeust_elasticjob_5fworker_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_SendStatsReqeust_elasticjob_5fworker_5fservice_2eproto}, {}};

static void InitDefaultsscc_info_WorkerAbility_elasticjob_5fworker_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::elasticjob_service::_WorkerAbility_default_instance_;
    new (ptr) ::elasticjob_service::WorkerAbility();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::elasticjob_service::WorkerAbility::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_WorkerAbility_elasticjob_5fworker_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_WorkerAbility_elasticjob_5fworker_5fservice_2eproto}, {}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_elasticjob_5fworker_5fservice_2eproto[18];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_elasticjob_5fworker_5fservice_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_elasticjob_5fworker_5fservice_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_elasticjob_5fworker_5fservice_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::elasticjob_service::JobRunningInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::elasticjob_service::JobRunningInfo, id_),
  PROTOBUF_FIELD_OFFSET(::elasticjob_service::JobRunningInfo, job_id_),
  PROTOBUF_FIELD_OFFSET(::elasticjob_service::JobRunningInfo, name_),
  PROTOBUF_FIELD_OFFSET(::elasticjob_service::JobRunningInfo, category_),
  PROTOBUF_FIELD_OFFSET(::elasticjob_service::JobRunningInfo, param_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::elasticjob_service::WorkerAbility, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::elasticjob_service::WorkerAbility, categories_),
  PROTOBUF_FIELD_OFFSET(::elasticjob_service::WorkerAbility, max_parallel_job_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::elasticjob_service::ErrorCode, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::elasticjob_service::ErrorCode, code_),
  PROTOBUF_FIELD_OFFSET(::elasticjob_service::ErrorCode, message_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::elasticjob_service::JobResult, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::elasticjob_service::JobResult, id_),
  PROTOBUF_FIELD_OFFSET(::elasticjob_service::JobResult, job_id_),
  PROTOBUF_FIELD_OFFSET(::elasticjob_service::JobResult, status_),
  PROTOBUF_FIELD_OFFSET(::elasticjob_service::JobResult, result_),
  PROTOBUF_FIELD_OFFSET(::elasticjob_service::JobResult, err_code_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::elasticjob_service::AddNewJobReuqest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::elasticjob_service::AddNewJobReuqest, running_info_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::elasticjob_service::AddNewJobReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::elasticjob_service::AddNewJobReply, err_code_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::elasticjob_service::RegisterWorkerReqeust, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::elasticjob_service::RegisterWorkerReqeust, ability_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::elasticjob_service::RegisterWorkerReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::elasticjob_service::RegisterWorkerReply, err_code_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::elasticjob_service::DeregisterWorkerReqeust, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::elasticjob_service::DeregisterWorkerReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::elasticjob_service::DeregisterWorkerReply, err_code_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::elasticjob_service::SendRunningJobsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::elasticjob_service::SendRunningJobsRequest, job_results_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::elasticjob_service::SendRunningJobsReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::elasticjob_service::SendRunningJobsReply, err_code_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::elasticjob_service::SendJobResultRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::elasticjob_service::SendJobResultRequest, job_results_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::elasticjob_service::SendJobResultReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::elasticjob_service::SendJobResultReply, err_code_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::elasticjob_service::ExchangeJobRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::elasticjob_service::ExchangeJobReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::elasticjob_service::ExchangeJobReply, err_code_),
  PROTOBUF_FIELD_OFFSET(::elasticjob_service::ExchangeJobReply, running_info_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::elasticjob_service::SendStatsReqeust, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::elasticjob_service::SendStatsReqeust, runing_jobs_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::elasticjob_service::SendStatsReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::elasticjob_service::SendStatsReply, err_code_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::elasticjob_service::JobRunningInfo)},
  { 10, -1, sizeof(::elasticjob_service::WorkerAbility)},
  { 17, -1, sizeof(::elasticjob_service::ErrorCode)},
  { 24, -1, sizeof(::elasticjob_service::JobResult)},
  { 34, -1, sizeof(::elasticjob_service::AddNewJobReuqest)},
  { 40, -1, sizeof(::elasticjob_service::AddNewJobReply)},
  { 46, -1, sizeof(::elasticjob_service::RegisterWorkerReqeust)},
  { 52, -1, sizeof(::elasticjob_service::RegisterWorkerReply)},
  { 58, -1, sizeof(::elasticjob_service::DeregisterWorkerReqeust)},
  { 63, -1, sizeof(::elasticjob_service::DeregisterWorkerReply)},
  { 69, -1, sizeof(::elasticjob_service::SendRunningJobsRequest)},
  { 75, -1, sizeof(::elasticjob_service::SendRunningJobsReply)},
  { 81, -1, sizeof(::elasticjob_service::SendJobResultRequest)},
  { 87, -1, sizeof(::elasticjob_service::SendJobResultReply)},
  { 93, -1, sizeof(::elasticjob_service::ExchangeJobRequest)},
  { 98, -1, sizeof(::elasticjob_service::ExchangeJobReply)},
  { 105, -1, sizeof(::elasticjob_service::SendStatsReqeust)},
  { 111, -1, sizeof(::elasticjob_service::SendStatsReply)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::elasticjob_service::_JobRunningInfo_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::elasticjob_service::_WorkerAbility_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::elasticjob_service::_ErrorCode_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::elasticjob_service::_JobResult_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::elasticjob_service::_AddNewJobReuqest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::elasticjob_service::_AddNewJobReply_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::elasticjob_service::_RegisterWorkerReqeust_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::elasticjob_service::_RegisterWorkerReply_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::elasticjob_service::_DeregisterWorkerReqeust_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::elasticjob_service::_DeregisterWorkerReply_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::elasticjob_service::_SendRunningJobsRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::elasticjob_service::_SendRunningJobsReply_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::elasticjob_service::_SendJobResultRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::elasticjob_service::_SendJobResultReply_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::elasticjob_service::_ExchangeJobRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::elasticjob_service::_ExchangeJobReply_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::elasticjob_service::_SendStatsReqeust_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::elasticjob_service::_SendStatsReply_default_instance_),
};

const char descriptor_table_protodef_elasticjob_5fworker_5fservice_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\037elasticjob_worker_service.proto\022\022elast"
  "icjob_service\"[\n\016JobRunningInfo\022\n\n\002id\030\001 "
  "\001(\t\022\016\n\006job_id\030\002 \001(\t\022\014\n\004name\030\003 \001(\t\022\020\n\010cat"
  "egory\030\004 \001(\t\022\r\n\005param\030\005 \001(\t\"=\n\rWorkerAbil"
  "ity\022\022\n\ncategories\030\001 \003(\t\022\030\n\020max_parallel_"
  "job\030\002 \001(\005\"*\n\tErrorCode\022\014\n\004code\030\001 \001(\t\022\017\n\007"
  "message\030\002 \001(\t\"x\n\tJobResult\022\n\n\002id\030\001 \001(\t\022\016"
  "\n\006job_id\030\002 \001(\t\022\016\n\006status\030\003 \001(\005\022\016\n\006result"
  "\030\004 \001(\t\022/\n\010err_code\030\005 \001(\0132\035.elasticjob_se"
  "rvice.ErrorCode\"L\n\020AddNewJobReuqest\0228\n\014r"
  "unning_info\030\001 \001(\0132\".elasticjob_service.J"
  "obRunningInfo\"A\n\016AddNewJobReply\022/\n\010err_c"
  "ode\030\001 \001(\0132\035.elasticjob_service.ErrorCode"
  "\"K\n\025RegisterWorkerReqeust\0222\n\007ability\030\001 \001"
  "(\0132!.elasticjob_service.WorkerAbility\"F\n"
  "\023RegisterWorkerReply\022/\n\010err_code\030\001 \001(\0132\035"
  ".elasticjob_service.ErrorCode\"\031\n\027Deregis"
  "terWorkerReqeust\"H\n\025DeregisterWorkerRepl"
  "y\022/\n\010err_code\030\001 \001(\0132\035.elasticjob_service"
  ".ErrorCode\"L\n\026SendRunningJobsRequest\0222\n\013"
  "job_results\030\002 \003(\0132\035.elasticjob_service.J"
  "obResult\"G\n\024SendRunningJobsReply\022/\n\010err_"
  "code\030\001 \001(\0132\035.elasticjob_service.ErrorCod"
  "e\"J\n\024SendJobResultRequest\0222\n\013job_results"
  "\030\001 \001(\0132\035.elasticjob_service.JobResult\"E\n"
  "\022SendJobResultReply\022/\n\010err_code\030\001 \001(\0132\035."
  "elasticjob_service.ErrorCode\"\024\n\022Exchange"
  "JobRequest\"}\n\020ExchangeJobReply\022/\n\010err_co"
  "de\030\001 \001(\0132\035.elasticjob_service.ErrorCode\022"
  "8\n\014running_info\030\002 \001(\0132\".elasticjob_servi"
  "ce.JobRunningInfo\"\'\n\020SendStatsReqeust\022\023\n"
  "\013runing_jobs\030\001 \001(\005\"A\n\016SendStatsReply\022/\n\010"
  "err_code\030\001 \001(\0132\035.elasticjob_service.Erro"
  "rCode2\362\004\n\020ElasticJobWorker\022f\n\016RegisterWo"
  "rker\022).elasticjob_service.RegisterWorker"
  "Reqeust\032\'.elasticjob_service.RegisterWor"
  "kerReply\"\000\022l\n\020DeregisterWorker\022+.elastic"
  "job_service.DeregisterWorkerReqeust\032).el"
  "asticjob_service.DeregisterWorkerReply\"\000"
  "\022W\n\tSendStats\022$.elasticjob_service.SendS"
  "tatsReqeust\032\".elasticjob_service.SendSta"
  "tsReply\"\000\022i\n\017SendRunningJobs\022*.elasticjo"
  "b_service.SendRunningJobsRequest\032(.elast"
  "icjob_service.SendRunningJobsReply\"\000\022c\n\r"
  "SendJobResult\022(.elasticjob_service.SendJ"
  "obResultRequest\032&.elasticjob_service.Sen"
  "dJobResultReply\"\000\022_\n\013ExchangeJob\022&.elast"
  "icjob_service.ExchangeJobRequest\032$.elast"
  "icjob_service.ExchangeJobReply\"\0000\001b\006prot"
  "o3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_elasticjob_5fworker_5fservice_2eproto_deps[1] = {
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_elasticjob_5fworker_5fservice_2eproto_sccs[18] = {
  &scc_info_AddNewJobReply_elasticjob_5fworker_5fservice_2eproto.base,
  &scc_info_AddNewJobReuqest_elasticjob_5fworker_5fservice_2eproto.base,
  &scc_info_DeregisterWorkerReply_elasticjob_5fworker_5fservice_2eproto.base,
  &scc_info_DeregisterWorkerReqeust_elasticjob_5fworker_5fservice_2eproto.base,
  &scc_info_ErrorCode_elasticjob_5fworker_5fservice_2eproto.base,
  &scc_info_ExchangeJobReply_elasticjob_5fworker_5fservice_2eproto.base,
  &scc_info_ExchangeJobRequest_elasticjob_5fworker_5fservice_2eproto.base,
  &scc_info_JobResult_elasticjob_5fworker_5fservice_2eproto.base,
  &scc_info_JobRunningInfo_elasticjob_5fworker_5fservice_2eproto.base,
  &scc_info_RegisterWorkerReply_elasticjob_5fworker_5fservice_2eproto.base,
  &scc_info_RegisterWorkerReqeust_elasticjob_5fworker_5fservice_2eproto.base,
  &scc_info_SendJobResultReply_elasticjob_5fworker_5fservice_2eproto.base,
  &scc_info_SendJobResultRequest_elasticjob_5fworker_5fservice_2eproto.base,
  &scc_info_SendRunningJobsReply_elasticjob_5fworker_5fservice_2eproto.base,
  &scc_info_SendRunningJobsRequest_elasticjob_5fworker_5fservice_2eproto.base,
  &scc_info_SendStatsReply_elasticjob_5fworker_5fservice_2eproto.base,
  &scc_info_SendStatsReqeust_elasticjob_5fworker_5fservice_2eproto.base,
  &scc_info_WorkerAbility_elasticjob_5fworker_5fservice_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_elasticjob_5fworker_5fservice_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_elasticjob_5fworker_5fservice_2eproto = {
  false, false, descriptor_table_protodef_elasticjob_5fworker_5fservice_2eproto, "elasticjob_worker_service.proto", 1962,
  &descriptor_table_elasticjob_5fworker_5fservice_2eproto_once, descriptor_table_elasticjob_5fworker_5fservice_2eproto_sccs, descriptor_table_elasticjob_5fworker_5fservice_2eproto_deps, 18, 0,
  schemas, file_default_instances, TableStruct_elasticjob_5fworker_5fservice_2eproto::offsets,
  file_level_metadata_elasticjob_5fworker_5fservice_2eproto, 18, file_level_enum_descriptors_elasticjob_5fworker_5fservice_2eproto, file_level_service_descriptors_elasticjob_5fworker_5fservice_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_elasticjob_5fworker_5fservice_2eproto = (static_cast<void>(::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_elasticjob_5fworker_5fservice_2eproto)), true);
namespace elasticjob_service {

// ===================================================================

void JobRunningInfo::InitAsDefaultInstance() {
}
class JobRunningInfo::_Internal {
 public:
};

JobRunningInfo::JobRunningInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:elasticjob_service.JobRunningInfo)
}
JobRunningInfo::JobRunningInfo(const JobRunningInfo& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_id().empty()) {
    id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_id(),
      GetArena());
  }
  job_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_job_id().empty()) {
    job_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_job_id(),
      GetArena());
  }
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_name(),
      GetArena());
  }
  category_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_category().empty()) {
    category_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_category(),
      GetArena());
  }
  param_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_param().empty()) {
    param_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_param(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:elasticjob_service.JobRunningInfo)
}

void JobRunningInfo::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_JobRunningInfo_elasticjob_5fworker_5fservice_2eproto.base);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  job_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  category_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  param_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

JobRunningInfo::~JobRunningInfo() {
  // @@protoc_insertion_point(destructor:elasticjob_service.JobRunningInfo)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void JobRunningInfo::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  job_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  category_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  param_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void JobRunningInfo::ArenaDtor(void* object) {
  JobRunningInfo* _this = reinterpret_cast< JobRunningInfo* >(object);
  (void)_this;
}
void JobRunningInfo::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void JobRunningInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const JobRunningInfo& JobRunningInfo::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_JobRunningInfo_elasticjob_5fworker_5fservice_2eproto.base);
  return *internal_default_instance();
}


void JobRunningInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:elasticjob_service.JobRunningInfo)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  job_id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  category_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  param_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* JobRunningInfo::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "elasticjob_service.JobRunningInfo.id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string job_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_job_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "elasticjob_service.JobRunningInfo.job_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string name = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "elasticjob_service.JobRunningInfo.name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string category = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_category();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "elasticjob_service.JobRunningInfo.category"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string param = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          auto str = _internal_mutable_param();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "elasticjob_service.JobRunningInfo.param"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* JobRunningInfo::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:elasticjob_service.JobRunningInfo)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "elasticjob_service.JobRunningInfo.id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_id(), target);
  }

  // string job_id = 2;
  if (this->job_id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_job_id().data(), static_cast<int>(this->_internal_job_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "elasticjob_service.JobRunningInfo.job_id");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_job_id(), target);
  }

  // string name = 3;
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "elasticjob_service.JobRunningInfo.name");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_name(), target);
  }

  // string category = 4;
  if (this->category().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_category().data(), static_cast<int>(this->_internal_category().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "elasticjob_service.JobRunningInfo.category");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_category(), target);
  }

  // string param = 5;
  if (this->param().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_param().data(), static_cast<int>(this->_internal_param().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "elasticjob_service.JobRunningInfo.param");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_param(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:elasticjob_service.JobRunningInfo)
  return target;
}

size_t JobRunningInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:elasticjob_service.JobRunningInfo)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  // string job_id = 2;
  if (this->job_id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_job_id());
  }

  // string name = 3;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // string category = 4;
  if (this->category().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_category());
  }

  // string param = 5;
  if (this->param().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_param());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void JobRunningInfo::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:elasticjob_service.JobRunningInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const JobRunningInfo* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<JobRunningInfo>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:elasticjob_service.JobRunningInfo)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:elasticjob_service.JobRunningInfo)
    MergeFrom(*source);
  }
}

void JobRunningInfo::MergeFrom(const JobRunningInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:elasticjob_service.JobRunningInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id().size() > 0) {
    _internal_set_id(from._internal_id());
  }
  if (from.job_id().size() > 0) {
    _internal_set_job_id(from._internal_job_id());
  }
  if (from.name().size() > 0) {
    _internal_set_name(from._internal_name());
  }
  if (from.category().size() > 0) {
    _internal_set_category(from._internal_category());
  }
  if (from.param().size() > 0) {
    _internal_set_param(from._internal_param());
  }
}

void JobRunningInfo::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:elasticjob_service.JobRunningInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void JobRunningInfo::CopyFrom(const JobRunningInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:elasticjob_service.JobRunningInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool JobRunningInfo::IsInitialized() const {
  return true;
}

void JobRunningInfo::InternalSwap(JobRunningInfo* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  id_.Swap(&other->id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  job_id_.Swap(&other->job_id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  category_.Swap(&other->category_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  param_.Swap(&other->param_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata JobRunningInfo::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void WorkerAbility::InitAsDefaultInstance() {
}
class WorkerAbility::_Internal {
 public:
};

WorkerAbility::WorkerAbility(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  categories_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:elasticjob_service.WorkerAbility)
}
WorkerAbility::WorkerAbility(const WorkerAbility& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      categories_(from.categories_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  max_parallel_job_ = from.max_parallel_job_;
  // @@protoc_insertion_point(copy_constructor:elasticjob_service.WorkerAbility)
}

void WorkerAbility::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_WorkerAbility_elasticjob_5fworker_5fservice_2eproto.base);
  max_parallel_job_ = 0;
}

WorkerAbility::~WorkerAbility() {
  // @@protoc_insertion_point(destructor:elasticjob_service.WorkerAbility)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void WorkerAbility::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void WorkerAbility::ArenaDtor(void* object) {
  WorkerAbility* _this = reinterpret_cast< WorkerAbility* >(object);
  (void)_this;
}
void WorkerAbility::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void WorkerAbility::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const WorkerAbility& WorkerAbility::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_WorkerAbility_elasticjob_5fworker_5fservice_2eproto.base);
  return *internal_default_instance();
}


void WorkerAbility::Clear() {
// @@protoc_insertion_point(message_clear_start:elasticjob_service.WorkerAbility)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  categories_.Clear();
  max_parallel_job_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* WorkerAbility::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated string categories = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_categories();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "elasticjob_service.WorkerAbility.categories"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      // int32 max_parallel_job = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          max_parallel_job_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* WorkerAbility::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:elasticjob_service.WorkerAbility)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string categories = 1;
  for (int i = 0, n = this->_internal_categories_size(); i < n; i++) {
    const auto& s = this->_internal_categories(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "elasticjob_service.WorkerAbility.categories");
    target = stream->WriteString(1, s, target);
  }

  // int32 max_parallel_job = 2;
  if (this->max_parallel_job() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_max_parallel_job(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:elasticjob_service.WorkerAbility)
  return target;
}

size_t WorkerAbility::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:elasticjob_service.WorkerAbility)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string categories = 1;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(categories_.size());
  for (int i = 0, n = categories_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      categories_.Get(i));
  }

  // int32 max_parallel_job = 2;
  if (this->max_parallel_job() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_max_parallel_job());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void WorkerAbility::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:elasticjob_service.WorkerAbility)
  GOOGLE_DCHECK_NE(&from, this);
  const WorkerAbility* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<WorkerAbility>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:elasticjob_service.WorkerAbility)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:elasticjob_service.WorkerAbility)
    MergeFrom(*source);
  }
}

void WorkerAbility::MergeFrom(const WorkerAbility& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:elasticjob_service.WorkerAbility)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  categories_.MergeFrom(from.categories_);
  if (from.max_parallel_job() != 0) {
    _internal_set_max_parallel_job(from._internal_max_parallel_job());
  }
}

void WorkerAbility::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:elasticjob_service.WorkerAbility)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WorkerAbility::CopyFrom(const WorkerAbility& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:elasticjob_service.WorkerAbility)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WorkerAbility::IsInitialized() const {
  return true;
}

void WorkerAbility::InternalSwap(WorkerAbility* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  categories_.InternalSwap(&other->categories_);
  swap(max_parallel_job_, other->max_parallel_job_);
}

::PROTOBUF_NAMESPACE_ID::Metadata WorkerAbility::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ErrorCode::InitAsDefaultInstance() {
}
class ErrorCode::_Internal {
 public:
};

ErrorCode::ErrorCode(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:elasticjob_service.ErrorCode)
}
ErrorCode::ErrorCode(const ErrorCode& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  code_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_code().empty()) {
    code_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_code(),
      GetArena());
  }
  message_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_message().empty()) {
    message_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_message(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:elasticjob_service.ErrorCode)
}

void ErrorCode::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ErrorCode_elasticjob_5fworker_5fservice_2eproto.base);
  code_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  message_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

ErrorCode::~ErrorCode() {
  // @@protoc_insertion_point(destructor:elasticjob_service.ErrorCode)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ErrorCode::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  code_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  message_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ErrorCode::ArenaDtor(void* object) {
  ErrorCode* _this = reinterpret_cast< ErrorCode* >(object);
  (void)_this;
}
void ErrorCode::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ErrorCode::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ErrorCode& ErrorCode::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ErrorCode_elasticjob_5fworker_5fservice_2eproto.base);
  return *internal_default_instance();
}


void ErrorCode::Clear() {
// @@protoc_insertion_point(message_clear_start:elasticjob_service.ErrorCode)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  code_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  message_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ErrorCode::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string code = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_code();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "elasticjob_service.ErrorCode.code"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string message = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_message();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "elasticjob_service.ErrorCode.message"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ErrorCode::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:elasticjob_service.ErrorCode)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string code = 1;
  if (this->code().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_code().data(), static_cast<int>(this->_internal_code().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "elasticjob_service.ErrorCode.code");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_code(), target);
  }

  // string message = 2;
  if (this->message().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_message().data(), static_cast<int>(this->_internal_message().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "elasticjob_service.ErrorCode.message");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_message(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:elasticjob_service.ErrorCode)
  return target;
}

size_t ErrorCode::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:elasticjob_service.ErrorCode)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string code = 1;
  if (this->code().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_code());
  }

  // string message = 2;
  if (this->message().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_message());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ErrorCode::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:elasticjob_service.ErrorCode)
  GOOGLE_DCHECK_NE(&from, this);
  const ErrorCode* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ErrorCode>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:elasticjob_service.ErrorCode)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:elasticjob_service.ErrorCode)
    MergeFrom(*source);
  }
}

void ErrorCode::MergeFrom(const ErrorCode& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:elasticjob_service.ErrorCode)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.code().size() > 0) {
    _internal_set_code(from._internal_code());
  }
  if (from.message().size() > 0) {
    _internal_set_message(from._internal_message());
  }
}

void ErrorCode::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:elasticjob_service.ErrorCode)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ErrorCode::CopyFrom(const ErrorCode& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:elasticjob_service.ErrorCode)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ErrorCode::IsInitialized() const {
  return true;
}

void ErrorCode::InternalSwap(ErrorCode* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  code_.Swap(&other->code_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  message_.Swap(&other->message_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata ErrorCode::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void JobResult::InitAsDefaultInstance() {
  ::elasticjob_service::_JobResult_default_instance_._instance.get_mutable()->err_code_ = const_cast< ::elasticjob_service::ErrorCode*>(
      ::elasticjob_service::ErrorCode::internal_default_instance());
}
class JobResult::_Internal {
 public:
  static const ::elasticjob_service::ErrorCode& err_code(const JobResult* msg);
};

const ::elasticjob_service::ErrorCode&
JobResult::_Internal::err_code(const JobResult* msg) {
  return *msg->err_code_;
}
JobResult::JobResult(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:elasticjob_service.JobResult)
}
JobResult::JobResult(const JobResult& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_id().empty()) {
    id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_id(),
      GetArena());
  }
  job_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_job_id().empty()) {
    job_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_job_id(),
      GetArena());
  }
  result_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_result().empty()) {
    result_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_result(),
      GetArena());
  }
  if (from._internal_has_err_code()) {
    err_code_ = new ::elasticjob_service::ErrorCode(*from.err_code_);
  } else {
    err_code_ = nullptr;
  }
  status_ = from.status_;
  // @@protoc_insertion_point(copy_constructor:elasticjob_service.JobResult)
}

void JobResult::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_JobResult_elasticjob_5fworker_5fservice_2eproto.base);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  job_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  result_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&err_code_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&status_) -
      reinterpret_cast<char*>(&err_code_)) + sizeof(status_));
}

JobResult::~JobResult() {
  // @@protoc_insertion_point(destructor:elasticjob_service.JobResult)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void JobResult::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  job_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  result_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete err_code_;
}

void JobResult::ArenaDtor(void* object) {
  JobResult* _this = reinterpret_cast< JobResult* >(object);
  (void)_this;
}
void JobResult::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void JobResult::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const JobResult& JobResult::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_JobResult_elasticjob_5fworker_5fservice_2eproto.base);
  return *internal_default_instance();
}


void JobResult::Clear() {
// @@protoc_insertion_point(message_clear_start:elasticjob_service.JobResult)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  job_id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  result_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  if (GetArena() == nullptr && err_code_ != nullptr) {
    delete err_code_;
  }
  err_code_ = nullptr;
  status_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* JobResult::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "elasticjob_service.JobResult.id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string job_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_job_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "elasticjob_service.JobResult.job_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 status = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          status_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string result = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_result();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "elasticjob_service.JobResult.result"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .elasticjob_service.ErrorCode err_code = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_err_code(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* JobResult::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:elasticjob_service.JobResult)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "elasticjob_service.JobResult.id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_id(), target);
  }

  // string job_id = 2;
  if (this->job_id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_job_id().data(), static_cast<int>(this->_internal_job_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "elasticjob_service.JobResult.job_id");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_job_id(), target);
  }

  // int32 status = 3;
  if (this->status() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->_internal_status(), target);
  }

  // string result = 4;
  if (this->result().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_result().data(), static_cast<int>(this->_internal_result().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "elasticjob_service.JobResult.result");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_result(), target);
  }

  // .elasticjob_service.ErrorCode err_code = 5;
  if (this->has_err_code()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        5, _Internal::err_code(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:elasticjob_service.JobResult)
  return target;
}

size_t JobResult::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:elasticjob_service.JobResult)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  // string job_id = 2;
  if (this->job_id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_job_id());
  }

  // string result = 4;
  if (this->result().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_result());
  }

  // .elasticjob_service.ErrorCode err_code = 5;
  if (this->has_err_code()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *err_code_);
  }

  // int32 status = 3;
  if (this->status() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_status());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void JobResult::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:elasticjob_service.JobResult)
  GOOGLE_DCHECK_NE(&from, this);
  const JobResult* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<JobResult>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:elasticjob_service.JobResult)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:elasticjob_service.JobResult)
    MergeFrom(*source);
  }
}

void JobResult::MergeFrom(const JobResult& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:elasticjob_service.JobResult)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id().size() > 0) {
    _internal_set_id(from._internal_id());
  }
  if (from.job_id().size() > 0) {
    _internal_set_job_id(from._internal_job_id());
  }
  if (from.result().size() > 0) {
    _internal_set_result(from._internal_result());
  }
  if (from.has_err_code()) {
    _internal_mutable_err_code()->::elasticjob_service::ErrorCode::MergeFrom(from._internal_err_code());
  }
  if (from.status() != 0) {
    _internal_set_status(from._internal_status());
  }
}

void JobResult::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:elasticjob_service.JobResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void JobResult::CopyFrom(const JobResult& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:elasticjob_service.JobResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool JobResult::IsInitialized() const {
  return true;
}

void JobResult::InternalSwap(JobResult* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  id_.Swap(&other->id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  job_id_.Swap(&other->job_id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  result_.Swap(&other->result_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(JobResult, status_)
      + sizeof(JobResult::status_)
      - PROTOBUF_FIELD_OFFSET(JobResult, err_code_)>(
          reinterpret_cast<char*>(&err_code_),
          reinterpret_cast<char*>(&other->err_code_));
}

::PROTOBUF_NAMESPACE_ID::Metadata JobResult::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void AddNewJobReuqest::InitAsDefaultInstance() {
  ::elasticjob_service::_AddNewJobReuqest_default_instance_._instance.get_mutable()->running_info_ = const_cast< ::elasticjob_service::JobRunningInfo*>(
      ::elasticjob_service::JobRunningInfo::internal_default_instance());
}
class AddNewJobReuqest::_Internal {
 public:
  static const ::elasticjob_service::JobRunningInfo& running_info(const AddNewJobReuqest* msg);
};

const ::elasticjob_service::JobRunningInfo&
AddNewJobReuqest::_Internal::running_info(const AddNewJobReuqest* msg) {
  return *msg->running_info_;
}
AddNewJobReuqest::AddNewJobReuqest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:elasticjob_service.AddNewJobReuqest)
}
AddNewJobReuqest::AddNewJobReuqest(const AddNewJobReuqest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_running_info()) {
    running_info_ = new ::elasticjob_service::JobRunningInfo(*from.running_info_);
  } else {
    running_info_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:elasticjob_service.AddNewJobReuqest)
}

void AddNewJobReuqest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_AddNewJobReuqest_elasticjob_5fworker_5fservice_2eproto.base);
  running_info_ = nullptr;
}

AddNewJobReuqest::~AddNewJobReuqest() {
  // @@protoc_insertion_point(destructor:elasticjob_service.AddNewJobReuqest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void AddNewJobReuqest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete running_info_;
}

void AddNewJobReuqest::ArenaDtor(void* object) {
  AddNewJobReuqest* _this = reinterpret_cast< AddNewJobReuqest* >(object);
  (void)_this;
}
void AddNewJobReuqest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void AddNewJobReuqest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const AddNewJobReuqest& AddNewJobReuqest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_AddNewJobReuqest_elasticjob_5fworker_5fservice_2eproto.base);
  return *internal_default_instance();
}


void AddNewJobReuqest::Clear() {
// @@protoc_insertion_point(message_clear_start:elasticjob_service.AddNewJobReuqest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && running_info_ != nullptr) {
    delete running_info_;
  }
  running_info_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AddNewJobReuqest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .elasticjob_service.JobRunningInfo running_info = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_running_info(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* AddNewJobReuqest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:elasticjob_service.AddNewJobReuqest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .elasticjob_service.JobRunningInfo running_info = 1;
  if (this->has_running_info()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::running_info(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:elasticjob_service.AddNewJobReuqest)
  return target;
}

size_t AddNewJobReuqest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:elasticjob_service.AddNewJobReuqest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .elasticjob_service.JobRunningInfo running_info = 1;
  if (this->has_running_info()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *running_info_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AddNewJobReuqest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:elasticjob_service.AddNewJobReuqest)
  GOOGLE_DCHECK_NE(&from, this);
  const AddNewJobReuqest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<AddNewJobReuqest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:elasticjob_service.AddNewJobReuqest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:elasticjob_service.AddNewJobReuqest)
    MergeFrom(*source);
  }
}

void AddNewJobReuqest::MergeFrom(const AddNewJobReuqest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:elasticjob_service.AddNewJobReuqest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_running_info()) {
    _internal_mutable_running_info()->::elasticjob_service::JobRunningInfo::MergeFrom(from._internal_running_info());
  }
}

void AddNewJobReuqest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:elasticjob_service.AddNewJobReuqest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AddNewJobReuqest::CopyFrom(const AddNewJobReuqest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:elasticjob_service.AddNewJobReuqest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddNewJobReuqest::IsInitialized() const {
  return true;
}

void AddNewJobReuqest::InternalSwap(AddNewJobReuqest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(running_info_, other->running_info_);
}

::PROTOBUF_NAMESPACE_ID::Metadata AddNewJobReuqest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void AddNewJobReply::InitAsDefaultInstance() {
  ::elasticjob_service::_AddNewJobReply_default_instance_._instance.get_mutable()->err_code_ = const_cast< ::elasticjob_service::ErrorCode*>(
      ::elasticjob_service::ErrorCode::internal_default_instance());
}
class AddNewJobReply::_Internal {
 public:
  static const ::elasticjob_service::ErrorCode& err_code(const AddNewJobReply* msg);
};

const ::elasticjob_service::ErrorCode&
AddNewJobReply::_Internal::err_code(const AddNewJobReply* msg) {
  return *msg->err_code_;
}
AddNewJobReply::AddNewJobReply(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:elasticjob_service.AddNewJobReply)
}
AddNewJobReply::AddNewJobReply(const AddNewJobReply& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_err_code()) {
    err_code_ = new ::elasticjob_service::ErrorCode(*from.err_code_);
  } else {
    err_code_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:elasticjob_service.AddNewJobReply)
}

void AddNewJobReply::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_AddNewJobReply_elasticjob_5fworker_5fservice_2eproto.base);
  err_code_ = nullptr;
}

AddNewJobReply::~AddNewJobReply() {
  // @@protoc_insertion_point(destructor:elasticjob_service.AddNewJobReply)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void AddNewJobReply::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete err_code_;
}

void AddNewJobReply::ArenaDtor(void* object) {
  AddNewJobReply* _this = reinterpret_cast< AddNewJobReply* >(object);
  (void)_this;
}
void AddNewJobReply::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void AddNewJobReply::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const AddNewJobReply& AddNewJobReply::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_AddNewJobReply_elasticjob_5fworker_5fservice_2eproto.base);
  return *internal_default_instance();
}


void AddNewJobReply::Clear() {
// @@protoc_insertion_point(message_clear_start:elasticjob_service.AddNewJobReply)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && err_code_ != nullptr) {
    delete err_code_;
  }
  err_code_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AddNewJobReply::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .elasticjob_service.ErrorCode err_code = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_err_code(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* AddNewJobReply::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:elasticjob_service.AddNewJobReply)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .elasticjob_service.ErrorCode err_code = 1;
  if (this->has_err_code()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::err_code(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:elasticjob_service.AddNewJobReply)
  return target;
}

size_t AddNewJobReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:elasticjob_service.AddNewJobReply)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .elasticjob_service.ErrorCode err_code = 1;
  if (this->has_err_code()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *err_code_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AddNewJobReply::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:elasticjob_service.AddNewJobReply)
  GOOGLE_DCHECK_NE(&from, this);
  const AddNewJobReply* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<AddNewJobReply>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:elasticjob_service.AddNewJobReply)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:elasticjob_service.AddNewJobReply)
    MergeFrom(*source);
  }
}

void AddNewJobReply::MergeFrom(const AddNewJobReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:elasticjob_service.AddNewJobReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_err_code()) {
    _internal_mutable_err_code()->::elasticjob_service::ErrorCode::MergeFrom(from._internal_err_code());
  }
}

void AddNewJobReply::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:elasticjob_service.AddNewJobReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AddNewJobReply::CopyFrom(const AddNewJobReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:elasticjob_service.AddNewJobReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddNewJobReply::IsInitialized() const {
  return true;
}

void AddNewJobReply::InternalSwap(AddNewJobReply* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(err_code_, other->err_code_);
}

::PROTOBUF_NAMESPACE_ID::Metadata AddNewJobReply::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void RegisterWorkerReqeust::InitAsDefaultInstance() {
  ::elasticjob_service::_RegisterWorkerReqeust_default_instance_._instance.get_mutable()->ability_ = const_cast< ::elasticjob_service::WorkerAbility*>(
      ::elasticjob_service::WorkerAbility::internal_default_instance());
}
class RegisterWorkerReqeust::_Internal {
 public:
  static const ::elasticjob_service::WorkerAbility& ability(const RegisterWorkerReqeust* msg);
};

const ::elasticjob_service::WorkerAbility&
RegisterWorkerReqeust::_Internal::ability(const RegisterWorkerReqeust* msg) {
  return *msg->ability_;
}
RegisterWorkerReqeust::RegisterWorkerReqeust(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:elasticjob_service.RegisterWorkerReqeust)
}
RegisterWorkerReqeust::RegisterWorkerReqeust(const RegisterWorkerReqeust& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_ability()) {
    ability_ = new ::elasticjob_service::WorkerAbility(*from.ability_);
  } else {
    ability_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:elasticjob_service.RegisterWorkerReqeust)
}

void RegisterWorkerReqeust::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_RegisterWorkerReqeust_elasticjob_5fworker_5fservice_2eproto.base);
  ability_ = nullptr;
}

RegisterWorkerReqeust::~RegisterWorkerReqeust() {
  // @@protoc_insertion_point(destructor:elasticjob_service.RegisterWorkerReqeust)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void RegisterWorkerReqeust::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete ability_;
}

void RegisterWorkerReqeust::ArenaDtor(void* object) {
  RegisterWorkerReqeust* _this = reinterpret_cast< RegisterWorkerReqeust* >(object);
  (void)_this;
}
void RegisterWorkerReqeust::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RegisterWorkerReqeust::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const RegisterWorkerReqeust& RegisterWorkerReqeust::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_RegisterWorkerReqeust_elasticjob_5fworker_5fservice_2eproto.base);
  return *internal_default_instance();
}


void RegisterWorkerReqeust::Clear() {
// @@protoc_insertion_point(message_clear_start:elasticjob_service.RegisterWorkerReqeust)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && ability_ != nullptr) {
    delete ability_;
  }
  ability_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RegisterWorkerReqeust::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .elasticjob_service.WorkerAbility ability = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_ability(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RegisterWorkerReqeust::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:elasticjob_service.RegisterWorkerReqeust)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .elasticjob_service.WorkerAbility ability = 1;
  if (this->has_ability()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::ability(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:elasticjob_service.RegisterWorkerReqeust)
  return target;
}

size_t RegisterWorkerReqeust::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:elasticjob_service.RegisterWorkerReqeust)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .elasticjob_service.WorkerAbility ability = 1;
  if (this->has_ability()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *ability_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RegisterWorkerReqeust::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:elasticjob_service.RegisterWorkerReqeust)
  GOOGLE_DCHECK_NE(&from, this);
  const RegisterWorkerReqeust* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RegisterWorkerReqeust>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:elasticjob_service.RegisterWorkerReqeust)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:elasticjob_service.RegisterWorkerReqeust)
    MergeFrom(*source);
  }
}

void RegisterWorkerReqeust::MergeFrom(const RegisterWorkerReqeust& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:elasticjob_service.RegisterWorkerReqeust)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_ability()) {
    _internal_mutable_ability()->::elasticjob_service::WorkerAbility::MergeFrom(from._internal_ability());
  }
}

void RegisterWorkerReqeust::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:elasticjob_service.RegisterWorkerReqeust)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RegisterWorkerReqeust::CopyFrom(const RegisterWorkerReqeust& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:elasticjob_service.RegisterWorkerReqeust)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RegisterWorkerReqeust::IsInitialized() const {
  return true;
}

void RegisterWorkerReqeust::InternalSwap(RegisterWorkerReqeust* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(ability_, other->ability_);
}

::PROTOBUF_NAMESPACE_ID::Metadata RegisterWorkerReqeust::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void RegisterWorkerReply::InitAsDefaultInstance() {
  ::elasticjob_service::_RegisterWorkerReply_default_instance_._instance.get_mutable()->err_code_ = const_cast< ::elasticjob_service::ErrorCode*>(
      ::elasticjob_service::ErrorCode::internal_default_instance());
}
class RegisterWorkerReply::_Internal {
 public:
  static const ::elasticjob_service::ErrorCode& err_code(const RegisterWorkerReply* msg);
};

const ::elasticjob_service::ErrorCode&
RegisterWorkerReply::_Internal::err_code(const RegisterWorkerReply* msg) {
  return *msg->err_code_;
}
RegisterWorkerReply::RegisterWorkerReply(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:elasticjob_service.RegisterWorkerReply)
}
RegisterWorkerReply::RegisterWorkerReply(const RegisterWorkerReply& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_err_code()) {
    err_code_ = new ::elasticjob_service::ErrorCode(*from.err_code_);
  } else {
    err_code_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:elasticjob_service.RegisterWorkerReply)
}

void RegisterWorkerReply::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_RegisterWorkerReply_elasticjob_5fworker_5fservice_2eproto.base);
  err_code_ = nullptr;
}

RegisterWorkerReply::~RegisterWorkerReply() {
  // @@protoc_insertion_point(destructor:elasticjob_service.RegisterWorkerReply)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void RegisterWorkerReply::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete err_code_;
}

void RegisterWorkerReply::ArenaDtor(void* object) {
  RegisterWorkerReply* _this = reinterpret_cast< RegisterWorkerReply* >(object);
  (void)_this;
}
void RegisterWorkerReply::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RegisterWorkerReply::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const RegisterWorkerReply& RegisterWorkerReply::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_RegisterWorkerReply_elasticjob_5fworker_5fservice_2eproto.base);
  return *internal_default_instance();
}


void RegisterWorkerReply::Clear() {
// @@protoc_insertion_point(message_clear_start:elasticjob_service.RegisterWorkerReply)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && err_code_ != nullptr) {
    delete err_code_;
  }
  err_code_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RegisterWorkerReply::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .elasticjob_service.ErrorCode err_code = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_err_code(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RegisterWorkerReply::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:elasticjob_service.RegisterWorkerReply)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .elasticjob_service.ErrorCode err_code = 1;
  if (this->has_err_code()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::err_code(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:elasticjob_service.RegisterWorkerReply)
  return target;
}

size_t RegisterWorkerReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:elasticjob_service.RegisterWorkerReply)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .elasticjob_service.ErrorCode err_code = 1;
  if (this->has_err_code()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *err_code_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RegisterWorkerReply::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:elasticjob_service.RegisterWorkerReply)
  GOOGLE_DCHECK_NE(&from, this);
  const RegisterWorkerReply* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RegisterWorkerReply>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:elasticjob_service.RegisterWorkerReply)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:elasticjob_service.RegisterWorkerReply)
    MergeFrom(*source);
  }
}

void RegisterWorkerReply::MergeFrom(const RegisterWorkerReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:elasticjob_service.RegisterWorkerReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_err_code()) {
    _internal_mutable_err_code()->::elasticjob_service::ErrorCode::MergeFrom(from._internal_err_code());
  }
}

void RegisterWorkerReply::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:elasticjob_service.RegisterWorkerReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RegisterWorkerReply::CopyFrom(const RegisterWorkerReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:elasticjob_service.RegisterWorkerReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RegisterWorkerReply::IsInitialized() const {
  return true;
}

void RegisterWorkerReply::InternalSwap(RegisterWorkerReply* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(err_code_, other->err_code_);
}

::PROTOBUF_NAMESPACE_ID::Metadata RegisterWorkerReply::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void DeregisterWorkerReqeust::InitAsDefaultInstance() {
}
class DeregisterWorkerReqeust::_Internal {
 public:
};

DeregisterWorkerReqeust::DeregisterWorkerReqeust(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:elasticjob_service.DeregisterWorkerReqeust)
}
DeregisterWorkerReqeust::DeregisterWorkerReqeust(const DeregisterWorkerReqeust& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:elasticjob_service.DeregisterWorkerReqeust)
}

void DeregisterWorkerReqeust::SharedCtor() {
}

DeregisterWorkerReqeust::~DeregisterWorkerReqeust() {
  // @@protoc_insertion_point(destructor:elasticjob_service.DeregisterWorkerReqeust)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void DeregisterWorkerReqeust::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void DeregisterWorkerReqeust::ArenaDtor(void* object) {
  DeregisterWorkerReqeust* _this = reinterpret_cast< DeregisterWorkerReqeust* >(object);
  (void)_this;
}
void DeregisterWorkerReqeust::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DeregisterWorkerReqeust::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DeregisterWorkerReqeust& DeregisterWorkerReqeust::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_DeregisterWorkerReqeust_elasticjob_5fworker_5fservice_2eproto.base);
  return *internal_default_instance();
}


void DeregisterWorkerReqeust::Clear() {
// @@protoc_insertion_point(message_clear_start:elasticjob_service.DeregisterWorkerReqeust)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DeregisterWorkerReqeust::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DeregisterWorkerReqeust::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:elasticjob_service.DeregisterWorkerReqeust)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:elasticjob_service.DeregisterWorkerReqeust)
  return target;
}

size_t DeregisterWorkerReqeust::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:elasticjob_service.DeregisterWorkerReqeust)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeregisterWorkerReqeust::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:elasticjob_service.DeregisterWorkerReqeust)
  GOOGLE_DCHECK_NE(&from, this);
  const DeregisterWorkerReqeust* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DeregisterWorkerReqeust>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:elasticjob_service.DeregisterWorkerReqeust)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:elasticjob_service.DeregisterWorkerReqeust)
    MergeFrom(*source);
  }
}

void DeregisterWorkerReqeust::MergeFrom(const DeregisterWorkerReqeust& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:elasticjob_service.DeregisterWorkerReqeust)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void DeregisterWorkerReqeust::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:elasticjob_service.DeregisterWorkerReqeust)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeregisterWorkerReqeust::CopyFrom(const DeregisterWorkerReqeust& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:elasticjob_service.DeregisterWorkerReqeust)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeregisterWorkerReqeust::IsInitialized() const {
  return true;
}

void DeregisterWorkerReqeust::InternalSwap(DeregisterWorkerReqeust* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DeregisterWorkerReqeust::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void DeregisterWorkerReply::InitAsDefaultInstance() {
  ::elasticjob_service::_DeregisterWorkerReply_default_instance_._instance.get_mutable()->err_code_ = const_cast< ::elasticjob_service::ErrorCode*>(
      ::elasticjob_service::ErrorCode::internal_default_instance());
}
class DeregisterWorkerReply::_Internal {
 public:
  static const ::elasticjob_service::ErrorCode& err_code(const DeregisterWorkerReply* msg);
};

const ::elasticjob_service::ErrorCode&
DeregisterWorkerReply::_Internal::err_code(const DeregisterWorkerReply* msg) {
  return *msg->err_code_;
}
DeregisterWorkerReply::DeregisterWorkerReply(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:elasticjob_service.DeregisterWorkerReply)
}
DeregisterWorkerReply::DeregisterWorkerReply(const DeregisterWorkerReply& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_err_code()) {
    err_code_ = new ::elasticjob_service::ErrorCode(*from.err_code_);
  } else {
    err_code_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:elasticjob_service.DeregisterWorkerReply)
}

void DeregisterWorkerReply::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_DeregisterWorkerReply_elasticjob_5fworker_5fservice_2eproto.base);
  err_code_ = nullptr;
}

DeregisterWorkerReply::~DeregisterWorkerReply() {
  // @@protoc_insertion_point(destructor:elasticjob_service.DeregisterWorkerReply)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void DeregisterWorkerReply::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete err_code_;
}

void DeregisterWorkerReply::ArenaDtor(void* object) {
  DeregisterWorkerReply* _this = reinterpret_cast< DeregisterWorkerReply* >(object);
  (void)_this;
}
void DeregisterWorkerReply::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DeregisterWorkerReply::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DeregisterWorkerReply& DeregisterWorkerReply::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_DeregisterWorkerReply_elasticjob_5fworker_5fservice_2eproto.base);
  return *internal_default_instance();
}


void DeregisterWorkerReply::Clear() {
// @@protoc_insertion_point(message_clear_start:elasticjob_service.DeregisterWorkerReply)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && err_code_ != nullptr) {
    delete err_code_;
  }
  err_code_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DeregisterWorkerReply::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .elasticjob_service.ErrorCode err_code = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_err_code(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DeregisterWorkerReply::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:elasticjob_service.DeregisterWorkerReply)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .elasticjob_service.ErrorCode err_code = 1;
  if (this->has_err_code()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::err_code(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:elasticjob_service.DeregisterWorkerReply)
  return target;
}

size_t DeregisterWorkerReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:elasticjob_service.DeregisterWorkerReply)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .elasticjob_service.ErrorCode err_code = 1;
  if (this->has_err_code()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *err_code_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeregisterWorkerReply::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:elasticjob_service.DeregisterWorkerReply)
  GOOGLE_DCHECK_NE(&from, this);
  const DeregisterWorkerReply* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DeregisterWorkerReply>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:elasticjob_service.DeregisterWorkerReply)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:elasticjob_service.DeregisterWorkerReply)
    MergeFrom(*source);
  }
}

void DeregisterWorkerReply::MergeFrom(const DeregisterWorkerReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:elasticjob_service.DeregisterWorkerReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_err_code()) {
    _internal_mutable_err_code()->::elasticjob_service::ErrorCode::MergeFrom(from._internal_err_code());
  }
}

void DeregisterWorkerReply::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:elasticjob_service.DeregisterWorkerReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeregisterWorkerReply::CopyFrom(const DeregisterWorkerReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:elasticjob_service.DeregisterWorkerReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeregisterWorkerReply::IsInitialized() const {
  return true;
}

void DeregisterWorkerReply::InternalSwap(DeregisterWorkerReply* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(err_code_, other->err_code_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DeregisterWorkerReply::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void SendRunningJobsRequest::InitAsDefaultInstance() {
}
class SendRunningJobsRequest::_Internal {
 public:
};

SendRunningJobsRequest::SendRunningJobsRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  job_results_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:elasticjob_service.SendRunningJobsRequest)
}
SendRunningJobsRequest::SendRunningJobsRequest(const SendRunningJobsRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      job_results_(from.job_results_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:elasticjob_service.SendRunningJobsRequest)
}

void SendRunningJobsRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_SendRunningJobsRequest_elasticjob_5fworker_5fservice_2eproto.base);
}

SendRunningJobsRequest::~SendRunningJobsRequest() {
  // @@protoc_insertion_point(destructor:elasticjob_service.SendRunningJobsRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SendRunningJobsRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void SendRunningJobsRequest::ArenaDtor(void* object) {
  SendRunningJobsRequest* _this = reinterpret_cast< SendRunningJobsRequest* >(object);
  (void)_this;
}
void SendRunningJobsRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SendRunningJobsRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SendRunningJobsRequest& SendRunningJobsRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SendRunningJobsRequest_elasticjob_5fworker_5fservice_2eproto.base);
  return *internal_default_instance();
}


void SendRunningJobsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:elasticjob_service.SendRunningJobsRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  job_results_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SendRunningJobsRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .elasticjob_service.JobResult job_results = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_job_results(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SendRunningJobsRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:elasticjob_service.SendRunningJobsRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .elasticjob_service.JobResult job_results = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_job_results_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, this->_internal_job_results(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:elasticjob_service.SendRunningJobsRequest)
  return target;
}

size_t SendRunningJobsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:elasticjob_service.SendRunningJobsRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .elasticjob_service.JobResult job_results = 2;
  total_size += 1UL * this->_internal_job_results_size();
  for (const auto& msg : this->job_results_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SendRunningJobsRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:elasticjob_service.SendRunningJobsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const SendRunningJobsRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SendRunningJobsRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:elasticjob_service.SendRunningJobsRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:elasticjob_service.SendRunningJobsRequest)
    MergeFrom(*source);
  }
}

void SendRunningJobsRequest::MergeFrom(const SendRunningJobsRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:elasticjob_service.SendRunningJobsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  job_results_.MergeFrom(from.job_results_);
}

void SendRunningJobsRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:elasticjob_service.SendRunningJobsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SendRunningJobsRequest::CopyFrom(const SendRunningJobsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:elasticjob_service.SendRunningJobsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SendRunningJobsRequest::IsInitialized() const {
  return true;
}

void SendRunningJobsRequest::InternalSwap(SendRunningJobsRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  job_results_.InternalSwap(&other->job_results_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SendRunningJobsRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void SendRunningJobsReply::InitAsDefaultInstance() {
  ::elasticjob_service::_SendRunningJobsReply_default_instance_._instance.get_mutable()->err_code_ = const_cast< ::elasticjob_service::ErrorCode*>(
      ::elasticjob_service::ErrorCode::internal_default_instance());
}
class SendRunningJobsReply::_Internal {
 public:
  static const ::elasticjob_service::ErrorCode& err_code(const SendRunningJobsReply* msg);
};

const ::elasticjob_service::ErrorCode&
SendRunningJobsReply::_Internal::err_code(const SendRunningJobsReply* msg) {
  return *msg->err_code_;
}
SendRunningJobsReply::SendRunningJobsReply(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:elasticjob_service.SendRunningJobsReply)
}
SendRunningJobsReply::SendRunningJobsReply(const SendRunningJobsReply& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_err_code()) {
    err_code_ = new ::elasticjob_service::ErrorCode(*from.err_code_);
  } else {
    err_code_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:elasticjob_service.SendRunningJobsReply)
}

void SendRunningJobsReply::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_SendRunningJobsReply_elasticjob_5fworker_5fservice_2eproto.base);
  err_code_ = nullptr;
}

SendRunningJobsReply::~SendRunningJobsReply() {
  // @@protoc_insertion_point(destructor:elasticjob_service.SendRunningJobsReply)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SendRunningJobsReply::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete err_code_;
}

void SendRunningJobsReply::ArenaDtor(void* object) {
  SendRunningJobsReply* _this = reinterpret_cast< SendRunningJobsReply* >(object);
  (void)_this;
}
void SendRunningJobsReply::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SendRunningJobsReply::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SendRunningJobsReply& SendRunningJobsReply::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SendRunningJobsReply_elasticjob_5fworker_5fservice_2eproto.base);
  return *internal_default_instance();
}


void SendRunningJobsReply::Clear() {
// @@protoc_insertion_point(message_clear_start:elasticjob_service.SendRunningJobsReply)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && err_code_ != nullptr) {
    delete err_code_;
  }
  err_code_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SendRunningJobsReply::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .elasticjob_service.ErrorCode err_code = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_err_code(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SendRunningJobsReply::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:elasticjob_service.SendRunningJobsReply)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .elasticjob_service.ErrorCode err_code = 1;
  if (this->has_err_code()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::err_code(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:elasticjob_service.SendRunningJobsReply)
  return target;
}

size_t SendRunningJobsReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:elasticjob_service.SendRunningJobsReply)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .elasticjob_service.ErrorCode err_code = 1;
  if (this->has_err_code()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *err_code_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SendRunningJobsReply::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:elasticjob_service.SendRunningJobsReply)
  GOOGLE_DCHECK_NE(&from, this);
  const SendRunningJobsReply* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SendRunningJobsReply>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:elasticjob_service.SendRunningJobsReply)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:elasticjob_service.SendRunningJobsReply)
    MergeFrom(*source);
  }
}

void SendRunningJobsReply::MergeFrom(const SendRunningJobsReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:elasticjob_service.SendRunningJobsReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_err_code()) {
    _internal_mutable_err_code()->::elasticjob_service::ErrorCode::MergeFrom(from._internal_err_code());
  }
}

void SendRunningJobsReply::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:elasticjob_service.SendRunningJobsReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SendRunningJobsReply::CopyFrom(const SendRunningJobsReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:elasticjob_service.SendRunningJobsReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SendRunningJobsReply::IsInitialized() const {
  return true;
}

void SendRunningJobsReply::InternalSwap(SendRunningJobsReply* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(err_code_, other->err_code_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SendRunningJobsReply::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void SendJobResultRequest::InitAsDefaultInstance() {
  ::elasticjob_service::_SendJobResultRequest_default_instance_._instance.get_mutable()->job_results_ = const_cast< ::elasticjob_service::JobResult*>(
      ::elasticjob_service::JobResult::internal_default_instance());
}
class SendJobResultRequest::_Internal {
 public:
  static const ::elasticjob_service::JobResult& job_results(const SendJobResultRequest* msg);
};

const ::elasticjob_service::JobResult&
SendJobResultRequest::_Internal::job_results(const SendJobResultRequest* msg) {
  return *msg->job_results_;
}
SendJobResultRequest::SendJobResultRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:elasticjob_service.SendJobResultRequest)
}
SendJobResultRequest::SendJobResultRequest(const SendJobResultRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_job_results()) {
    job_results_ = new ::elasticjob_service::JobResult(*from.job_results_);
  } else {
    job_results_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:elasticjob_service.SendJobResultRequest)
}

void SendJobResultRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_SendJobResultRequest_elasticjob_5fworker_5fservice_2eproto.base);
  job_results_ = nullptr;
}

SendJobResultRequest::~SendJobResultRequest() {
  // @@protoc_insertion_point(destructor:elasticjob_service.SendJobResultRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SendJobResultRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete job_results_;
}

void SendJobResultRequest::ArenaDtor(void* object) {
  SendJobResultRequest* _this = reinterpret_cast< SendJobResultRequest* >(object);
  (void)_this;
}
void SendJobResultRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SendJobResultRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SendJobResultRequest& SendJobResultRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SendJobResultRequest_elasticjob_5fworker_5fservice_2eproto.base);
  return *internal_default_instance();
}


void SendJobResultRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:elasticjob_service.SendJobResultRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && job_results_ != nullptr) {
    delete job_results_;
  }
  job_results_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SendJobResultRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .elasticjob_service.JobResult job_results = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_job_results(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SendJobResultRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:elasticjob_service.SendJobResultRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .elasticjob_service.JobResult job_results = 1;
  if (this->has_job_results()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::job_results(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:elasticjob_service.SendJobResultRequest)
  return target;
}

size_t SendJobResultRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:elasticjob_service.SendJobResultRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .elasticjob_service.JobResult job_results = 1;
  if (this->has_job_results()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *job_results_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SendJobResultRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:elasticjob_service.SendJobResultRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const SendJobResultRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SendJobResultRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:elasticjob_service.SendJobResultRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:elasticjob_service.SendJobResultRequest)
    MergeFrom(*source);
  }
}

void SendJobResultRequest::MergeFrom(const SendJobResultRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:elasticjob_service.SendJobResultRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_job_results()) {
    _internal_mutable_job_results()->::elasticjob_service::JobResult::MergeFrom(from._internal_job_results());
  }
}

void SendJobResultRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:elasticjob_service.SendJobResultRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SendJobResultRequest::CopyFrom(const SendJobResultRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:elasticjob_service.SendJobResultRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SendJobResultRequest::IsInitialized() const {
  return true;
}

void SendJobResultRequest::InternalSwap(SendJobResultRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(job_results_, other->job_results_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SendJobResultRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void SendJobResultReply::InitAsDefaultInstance() {
  ::elasticjob_service::_SendJobResultReply_default_instance_._instance.get_mutable()->err_code_ = const_cast< ::elasticjob_service::ErrorCode*>(
      ::elasticjob_service::ErrorCode::internal_default_instance());
}
class SendJobResultReply::_Internal {
 public:
  static const ::elasticjob_service::ErrorCode& err_code(const SendJobResultReply* msg);
};

const ::elasticjob_service::ErrorCode&
SendJobResultReply::_Internal::err_code(const SendJobResultReply* msg) {
  return *msg->err_code_;
}
SendJobResultReply::SendJobResultReply(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:elasticjob_service.SendJobResultReply)
}
SendJobResultReply::SendJobResultReply(const SendJobResultReply& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_err_code()) {
    err_code_ = new ::elasticjob_service::ErrorCode(*from.err_code_);
  } else {
    err_code_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:elasticjob_service.SendJobResultReply)
}

void SendJobResultReply::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_SendJobResultReply_elasticjob_5fworker_5fservice_2eproto.base);
  err_code_ = nullptr;
}

SendJobResultReply::~SendJobResultReply() {
  // @@protoc_insertion_point(destructor:elasticjob_service.SendJobResultReply)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SendJobResultReply::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete err_code_;
}

void SendJobResultReply::ArenaDtor(void* object) {
  SendJobResultReply* _this = reinterpret_cast< SendJobResultReply* >(object);
  (void)_this;
}
void SendJobResultReply::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SendJobResultReply::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SendJobResultReply& SendJobResultReply::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SendJobResultReply_elasticjob_5fworker_5fservice_2eproto.base);
  return *internal_default_instance();
}


void SendJobResultReply::Clear() {
// @@protoc_insertion_point(message_clear_start:elasticjob_service.SendJobResultReply)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && err_code_ != nullptr) {
    delete err_code_;
  }
  err_code_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SendJobResultReply::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .elasticjob_service.ErrorCode err_code = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_err_code(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SendJobResultReply::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:elasticjob_service.SendJobResultReply)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .elasticjob_service.ErrorCode err_code = 1;
  if (this->has_err_code()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::err_code(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:elasticjob_service.SendJobResultReply)
  return target;
}

size_t SendJobResultReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:elasticjob_service.SendJobResultReply)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .elasticjob_service.ErrorCode err_code = 1;
  if (this->has_err_code()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *err_code_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SendJobResultReply::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:elasticjob_service.SendJobResultReply)
  GOOGLE_DCHECK_NE(&from, this);
  const SendJobResultReply* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SendJobResultReply>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:elasticjob_service.SendJobResultReply)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:elasticjob_service.SendJobResultReply)
    MergeFrom(*source);
  }
}

void SendJobResultReply::MergeFrom(const SendJobResultReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:elasticjob_service.SendJobResultReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_err_code()) {
    _internal_mutable_err_code()->::elasticjob_service::ErrorCode::MergeFrom(from._internal_err_code());
  }
}

void SendJobResultReply::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:elasticjob_service.SendJobResultReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SendJobResultReply::CopyFrom(const SendJobResultReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:elasticjob_service.SendJobResultReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SendJobResultReply::IsInitialized() const {
  return true;
}

void SendJobResultReply::InternalSwap(SendJobResultReply* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(err_code_, other->err_code_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SendJobResultReply::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ExchangeJobRequest::InitAsDefaultInstance() {
}
class ExchangeJobRequest::_Internal {
 public:
};

ExchangeJobRequest::ExchangeJobRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:elasticjob_service.ExchangeJobRequest)
}
ExchangeJobRequest::ExchangeJobRequest(const ExchangeJobRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:elasticjob_service.ExchangeJobRequest)
}

void ExchangeJobRequest::SharedCtor() {
}

ExchangeJobRequest::~ExchangeJobRequest() {
  // @@protoc_insertion_point(destructor:elasticjob_service.ExchangeJobRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ExchangeJobRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void ExchangeJobRequest::ArenaDtor(void* object) {
  ExchangeJobRequest* _this = reinterpret_cast< ExchangeJobRequest* >(object);
  (void)_this;
}
void ExchangeJobRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ExchangeJobRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ExchangeJobRequest& ExchangeJobRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ExchangeJobRequest_elasticjob_5fworker_5fservice_2eproto.base);
  return *internal_default_instance();
}


void ExchangeJobRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:elasticjob_service.ExchangeJobRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ExchangeJobRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ExchangeJobRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:elasticjob_service.ExchangeJobRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:elasticjob_service.ExchangeJobRequest)
  return target;
}

size_t ExchangeJobRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:elasticjob_service.ExchangeJobRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ExchangeJobRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:elasticjob_service.ExchangeJobRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ExchangeJobRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ExchangeJobRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:elasticjob_service.ExchangeJobRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:elasticjob_service.ExchangeJobRequest)
    MergeFrom(*source);
  }
}

void ExchangeJobRequest::MergeFrom(const ExchangeJobRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:elasticjob_service.ExchangeJobRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void ExchangeJobRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:elasticjob_service.ExchangeJobRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ExchangeJobRequest::CopyFrom(const ExchangeJobRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:elasticjob_service.ExchangeJobRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ExchangeJobRequest::IsInitialized() const {
  return true;
}

void ExchangeJobRequest::InternalSwap(ExchangeJobRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ExchangeJobRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ExchangeJobReply::InitAsDefaultInstance() {
  ::elasticjob_service::_ExchangeJobReply_default_instance_._instance.get_mutable()->err_code_ = const_cast< ::elasticjob_service::ErrorCode*>(
      ::elasticjob_service::ErrorCode::internal_default_instance());
  ::elasticjob_service::_ExchangeJobReply_default_instance_._instance.get_mutable()->running_info_ = const_cast< ::elasticjob_service::JobRunningInfo*>(
      ::elasticjob_service::JobRunningInfo::internal_default_instance());
}
class ExchangeJobReply::_Internal {
 public:
  static const ::elasticjob_service::ErrorCode& err_code(const ExchangeJobReply* msg);
  static const ::elasticjob_service::JobRunningInfo& running_info(const ExchangeJobReply* msg);
};

const ::elasticjob_service::ErrorCode&
ExchangeJobReply::_Internal::err_code(const ExchangeJobReply* msg) {
  return *msg->err_code_;
}
const ::elasticjob_service::JobRunningInfo&
ExchangeJobReply::_Internal::running_info(const ExchangeJobReply* msg) {
  return *msg->running_info_;
}
ExchangeJobReply::ExchangeJobReply(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:elasticjob_service.ExchangeJobReply)
}
ExchangeJobReply::ExchangeJobReply(const ExchangeJobReply& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_err_code()) {
    err_code_ = new ::elasticjob_service::ErrorCode(*from.err_code_);
  } else {
    err_code_ = nullptr;
  }
  if (from._internal_has_running_info()) {
    running_info_ = new ::elasticjob_service::JobRunningInfo(*from.running_info_);
  } else {
    running_info_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:elasticjob_service.ExchangeJobReply)
}

void ExchangeJobReply::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ExchangeJobReply_elasticjob_5fworker_5fservice_2eproto.base);
  ::memset(&err_code_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&running_info_) -
      reinterpret_cast<char*>(&err_code_)) + sizeof(running_info_));
}

ExchangeJobReply::~ExchangeJobReply() {
  // @@protoc_insertion_point(destructor:elasticjob_service.ExchangeJobReply)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ExchangeJobReply::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete err_code_;
  if (this != internal_default_instance()) delete running_info_;
}

void ExchangeJobReply::ArenaDtor(void* object) {
  ExchangeJobReply* _this = reinterpret_cast< ExchangeJobReply* >(object);
  (void)_this;
}
void ExchangeJobReply::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ExchangeJobReply::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ExchangeJobReply& ExchangeJobReply::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ExchangeJobReply_elasticjob_5fworker_5fservice_2eproto.base);
  return *internal_default_instance();
}


void ExchangeJobReply::Clear() {
// @@protoc_insertion_point(message_clear_start:elasticjob_service.ExchangeJobReply)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && err_code_ != nullptr) {
    delete err_code_;
  }
  err_code_ = nullptr;
  if (GetArena() == nullptr && running_info_ != nullptr) {
    delete running_info_;
  }
  running_info_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ExchangeJobReply::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .elasticjob_service.ErrorCode err_code = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_err_code(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .elasticjob_service.JobRunningInfo running_info = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_running_info(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ExchangeJobReply::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:elasticjob_service.ExchangeJobReply)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .elasticjob_service.ErrorCode err_code = 1;
  if (this->has_err_code()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::err_code(this), target, stream);
  }

  // .elasticjob_service.JobRunningInfo running_info = 2;
  if (this->has_running_info()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::running_info(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:elasticjob_service.ExchangeJobReply)
  return target;
}

size_t ExchangeJobReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:elasticjob_service.ExchangeJobReply)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .elasticjob_service.ErrorCode err_code = 1;
  if (this->has_err_code()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *err_code_);
  }

  // .elasticjob_service.JobRunningInfo running_info = 2;
  if (this->has_running_info()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *running_info_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ExchangeJobReply::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:elasticjob_service.ExchangeJobReply)
  GOOGLE_DCHECK_NE(&from, this);
  const ExchangeJobReply* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ExchangeJobReply>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:elasticjob_service.ExchangeJobReply)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:elasticjob_service.ExchangeJobReply)
    MergeFrom(*source);
  }
}

void ExchangeJobReply::MergeFrom(const ExchangeJobReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:elasticjob_service.ExchangeJobReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_err_code()) {
    _internal_mutable_err_code()->::elasticjob_service::ErrorCode::MergeFrom(from._internal_err_code());
  }
  if (from.has_running_info()) {
    _internal_mutable_running_info()->::elasticjob_service::JobRunningInfo::MergeFrom(from._internal_running_info());
  }
}

void ExchangeJobReply::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:elasticjob_service.ExchangeJobReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ExchangeJobReply::CopyFrom(const ExchangeJobReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:elasticjob_service.ExchangeJobReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ExchangeJobReply::IsInitialized() const {
  return true;
}

void ExchangeJobReply::InternalSwap(ExchangeJobReply* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ExchangeJobReply, running_info_)
      + sizeof(ExchangeJobReply::running_info_)
      - PROTOBUF_FIELD_OFFSET(ExchangeJobReply, err_code_)>(
          reinterpret_cast<char*>(&err_code_),
          reinterpret_cast<char*>(&other->err_code_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ExchangeJobReply::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void SendStatsReqeust::InitAsDefaultInstance() {
}
class SendStatsReqeust::_Internal {
 public:
};

SendStatsReqeust::SendStatsReqeust(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:elasticjob_service.SendStatsReqeust)
}
SendStatsReqeust::SendStatsReqeust(const SendStatsReqeust& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  runing_jobs_ = from.runing_jobs_;
  // @@protoc_insertion_point(copy_constructor:elasticjob_service.SendStatsReqeust)
}

void SendStatsReqeust::SharedCtor() {
  runing_jobs_ = 0;
}

SendStatsReqeust::~SendStatsReqeust() {
  // @@protoc_insertion_point(destructor:elasticjob_service.SendStatsReqeust)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SendStatsReqeust::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void SendStatsReqeust::ArenaDtor(void* object) {
  SendStatsReqeust* _this = reinterpret_cast< SendStatsReqeust* >(object);
  (void)_this;
}
void SendStatsReqeust::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SendStatsReqeust::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SendStatsReqeust& SendStatsReqeust::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SendStatsReqeust_elasticjob_5fworker_5fservice_2eproto.base);
  return *internal_default_instance();
}


void SendStatsReqeust::Clear() {
// @@protoc_insertion_point(message_clear_start:elasticjob_service.SendStatsReqeust)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  runing_jobs_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SendStatsReqeust::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 runing_jobs = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          runing_jobs_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SendStatsReqeust::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:elasticjob_service.SendStatsReqeust)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 runing_jobs = 1;
  if (this->runing_jobs() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_runing_jobs(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:elasticjob_service.SendStatsReqeust)
  return target;
}

size_t SendStatsReqeust::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:elasticjob_service.SendStatsReqeust)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 runing_jobs = 1;
  if (this->runing_jobs() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_runing_jobs());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SendStatsReqeust::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:elasticjob_service.SendStatsReqeust)
  GOOGLE_DCHECK_NE(&from, this);
  const SendStatsReqeust* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SendStatsReqeust>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:elasticjob_service.SendStatsReqeust)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:elasticjob_service.SendStatsReqeust)
    MergeFrom(*source);
  }
}

void SendStatsReqeust::MergeFrom(const SendStatsReqeust& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:elasticjob_service.SendStatsReqeust)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.runing_jobs() != 0) {
    _internal_set_runing_jobs(from._internal_runing_jobs());
  }
}

void SendStatsReqeust::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:elasticjob_service.SendStatsReqeust)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SendStatsReqeust::CopyFrom(const SendStatsReqeust& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:elasticjob_service.SendStatsReqeust)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SendStatsReqeust::IsInitialized() const {
  return true;
}

void SendStatsReqeust::InternalSwap(SendStatsReqeust* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(runing_jobs_, other->runing_jobs_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SendStatsReqeust::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void SendStatsReply::InitAsDefaultInstance() {
  ::elasticjob_service::_SendStatsReply_default_instance_._instance.get_mutable()->err_code_ = const_cast< ::elasticjob_service::ErrorCode*>(
      ::elasticjob_service::ErrorCode::internal_default_instance());
}
class SendStatsReply::_Internal {
 public:
  static const ::elasticjob_service::ErrorCode& err_code(const SendStatsReply* msg);
};

const ::elasticjob_service::ErrorCode&
SendStatsReply::_Internal::err_code(const SendStatsReply* msg) {
  return *msg->err_code_;
}
SendStatsReply::SendStatsReply(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:elasticjob_service.SendStatsReply)
}
SendStatsReply::SendStatsReply(const SendStatsReply& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_err_code()) {
    err_code_ = new ::elasticjob_service::ErrorCode(*from.err_code_);
  } else {
    err_code_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:elasticjob_service.SendStatsReply)
}

void SendStatsReply::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_SendStatsReply_elasticjob_5fworker_5fservice_2eproto.base);
  err_code_ = nullptr;
}

SendStatsReply::~SendStatsReply() {
  // @@protoc_insertion_point(destructor:elasticjob_service.SendStatsReply)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SendStatsReply::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete err_code_;
}

void SendStatsReply::ArenaDtor(void* object) {
  SendStatsReply* _this = reinterpret_cast< SendStatsReply* >(object);
  (void)_this;
}
void SendStatsReply::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SendStatsReply::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SendStatsReply& SendStatsReply::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SendStatsReply_elasticjob_5fworker_5fservice_2eproto.base);
  return *internal_default_instance();
}


void SendStatsReply::Clear() {
// @@protoc_insertion_point(message_clear_start:elasticjob_service.SendStatsReply)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && err_code_ != nullptr) {
    delete err_code_;
  }
  err_code_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SendStatsReply::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .elasticjob_service.ErrorCode err_code = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_err_code(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SendStatsReply::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:elasticjob_service.SendStatsReply)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .elasticjob_service.ErrorCode err_code = 1;
  if (this->has_err_code()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::err_code(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:elasticjob_service.SendStatsReply)
  return target;
}

size_t SendStatsReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:elasticjob_service.SendStatsReply)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .elasticjob_service.ErrorCode err_code = 1;
  if (this->has_err_code()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *err_code_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SendStatsReply::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:elasticjob_service.SendStatsReply)
  GOOGLE_DCHECK_NE(&from, this);
  const SendStatsReply* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SendStatsReply>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:elasticjob_service.SendStatsReply)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:elasticjob_service.SendStatsReply)
    MergeFrom(*source);
  }
}

void SendStatsReply::MergeFrom(const SendStatsReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:elasticjob_service.SendStatsReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_err_code()) {
    _internal_mutable_err_code()->::elasticjob_service::ErrorCode::MergeFrom(from._internal_err_code());
  }
}

void SendStatsReply::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:elasticjob_service.SendStatsReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SendStatsReply::CopyFrom(const SendStatsReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:elasticjob_service.SendStatsReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SendStatsReply::IsInitialized() const {
  return true;
}

void SendStatsReply::InternalSwap(SendStatsReply* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(err_code_, other->err_code_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SendStatsReply::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace elasticjob_service
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::elasticjob_service::JobRunningInfo* Arena::CreateMaybeMessage< ::elasticjob_service::JobRunningInfo >(Arena* arena) {
  return Arena::CreateMessageInternal< ::elasticjob_service::JobRunningInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::elasticjob_service::WorkerAbility* Arena::CreateMaybeMessage< ::elasticjob_service::WorkerAbility >(Arena* arena) {
  return Arena::CreateMessageInternal< ::elasticjob_service::WorkerAbility >(arena);
}
template<> PROTOBUF_NOINLINE ::elasticjob_service::ErrorCode* Arena::CreateMaybeMessage< ::elasticjob_service::ErrorCode >(Arena* arena) {
  return Arena::CreateMessageInternal< ::elasticjob_service::ErrorCode >(arena);
}
template<> PROTOBUF_NOINLINE ::elasticjob_service::JobResult* Arena::CreateMaybeMessage< ::elasticjob_service::JobResult >(Arena* arena) {
  return Arena::CreateMessageInternal< ::elasticjob_service::JobResult >(arena);
}
template<> PROTOBUF_NOINLINE ::elasticjob_service::AddNewJobReuqest* Arena::CreateMaybeMessage< ::elasticjob_service::AddNewJobReuqest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::elasticjob_service::AddNewJobReuqest >(arena);
}
template<> PROTOBUF_NOINLINE ::elasticjob_service::AddNewJobReply* Arena::CreateMaybeMessage< ::elasticjob_service::AddNewJobReply >(Arena* arena) {
  return Arena::CreateMessageInternal< ::elasticjob_service::AddNewJobReply >(arena);
}
template<> PROTOBUF_NOINLINE ::elasticjob_service::RegisterWorkerReqeust* Arena::CreateMaybeMessage< ::elasticjob_service::RegisterWorkerReqeust >(Arena* arena) {
  return Arena::CreateMessageInternal< ::elasticjob_service::RegisterWorkerReqeust >(arena);
}
template<> PROTOBUF_NOINLINE ::elasticjob_service::RegisterWorkerReply* Arena::CreateMaybeMessage< ::elasticjob_service::RegisterWorkerReply >(Arena* arena) {
  return Arena::CreateMessageInternal< ::elasticjob_service::RegisterWorkerReply >(arena);
}
template<> PROTOBUF_NOINLINE ::elasticjob_service::DeregisterWorkerReqeust* Arena::CreateMaybeMessage< ::elasticjob_service::DeregisterWorkerReqeust >(Arena* arena) {
  return Arena::CreateMessageInternal< ::elasticjob_service::DeregisterWorkerReqeust >(arena);
}
template<> PROTOBUF_NOINLINE ::elasticjob_service::DeregisterWorkerReply* Arena::CreateMaybeMessage< ::elasticjob_service::DeregisterWorkerReply >(Arena* arena) {
  return Arena::CreateMessageInternal< ::elasticjob_service::DeregisterWorkerReply >(arena);
}
template<> PROTOBUF_NOINLINE ::elasticjob_service::SendRunningJobsRequest* Arena::CreateMaybeMessage< ::elasticjob_service::SendRunningJobsRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::elasticjob_service::SendRunningJobsRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::elasticjob_service::SendRunningJobsReply* Arena::CreateMaybeMessage< ::elasticjob_service::SendRunningJobsReply >(Arena* arena) {
  return Arena::CreateMessageInternal< ::elasticjob_service::SendRunningJobsReply >(arena);
}
template<> PROTOBUF_NOINLINE ::elasticjob_service::SendJobResultRequest* Arena::CreateMaybeMessage< ::elasticjob_service::SendJobResultRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::elasticjob_service::SendJobResultRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::elasticjob_service::SendJobResultReply* Arena::CreateMaybeMessage< ::elasticjob_service::SendJobResultReply >(Arena* arena) {
  return Arena::CreateMessageInternal< ::elasticjob_service::SendJobResultReply >(arena);
}
template<> PROTOBUF_NOINLINE ::elasticjob_service::ExchangeJobRequest* Arena::CreateMaybeMessage< ::elasticjob_service::ExchangeJobRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::elasticjob_service::ExchangeJobRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::elasticjob_service::ExchangeJobReply* Arena::CreateMaybeMessage< ::elasticjob_service::ExchangeJobReply >(Arena* arena) {
  return Arena::CreateMessageInternal< ::elasticjob_service::ExchangeJobReply >(arena);
}
template<> PROTOBUF_NOINLINE ::elasticjob_service::SendStatsReqeust* Arena::CreateMaybeMessage< ::elasticjob_service::SendStatsReqeust >(Arena* arena) {
  return Arena::CreateMessageInternal< ::elasticjob_service::SendStatsReqeust >(arena);
}
template<> PROTOBUF_NOINLINE ::elasticjob_service::SendStatsReply* Arena::CreateMaybeMessage< ::elasticjob_service::SendStatsReply >(Arena* arena) {
  return Arena::CreateMessageInternal< ::elasticjob_service::SendStatsReply >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
