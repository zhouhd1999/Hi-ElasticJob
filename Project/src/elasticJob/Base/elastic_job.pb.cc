// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: elastic_job.proto

#include "elastic_job.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_elastic_5fjob_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ErrorCode_elastic_5fjob_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_elastic_5fjob_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_JobInfo_elastic_5fjob_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_elastic_5fjob_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_JobResult_elastic_5fjob_2eproto;
namespace elasticjob {
namespace proto {
class ErrorCodeDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ErrorCode> _instance;
} _ErrorCode_default_instance_;
class JobInfoDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<JobInfo> _instance;
} _JobInfo_default_instance_;
class JobResultDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<JobResult> _instance;
} _JobResult_default_instance_;
class PingRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<PingRequest> _instance;
} _PingRequest_default_instance_;
class PongResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<PongResponse> _instance;
} _PongResponse_default_instance_;
class AddJobRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<AddJobRequest> _instance;
} _AddJobRequest_default_instance_;
class AddJobReplyDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<AddJobReply> _instance;
} _AddJobReply_default_instance_;
class DeleteJobRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<DeleteJobRequest> _instance;
} _DeleteJobRequest_default_instance_;
class DeleteJobReplyDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<DeleteJobReply> _instance;
} _DeleteJobReply_default_instance_;
class GetJobResultRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetJobResultRequest> _instance;
} _GetJobResultRequest_default_instance_;
class GetJobResultReplyDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetJobResultReply> _instance;
} _GetJobResultReply_default_instance_;
}  // namespace proto
}  // namespace elasticjob
static void InitDefaultsscc_info_AddJobReply_elastic_5fjob_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::elasticjob::proto::_AddJobReply_default_instance_;
    new (ptr) ::elasticjob::proto::AddJobReply();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::elasticjob::proto::AddJobReply::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_AddJobReply_elastic_5fjob_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_AddJobReply_elastic_5fjob_2eproto}, {
      &scc_info_ErrorCode_elastic_5fjob_2eproto.base,}};

static void InitDefaultsscc_info_AddJobRequest_elastic_5fjob_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::elasticjob::proto::_AddJobRequest_default_instance_;
    new (ptr) ::elasticjob::proto::AddJobRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::elasticjob::proto::AddJobRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_AddJobRequest_elastic_5fjob_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_AddJobRequest_elastic_5fjob_2eproto}, {
      &scc_info_JobInfo_elastic_5fjob_2eproto.base,}};

static void InitDefaultsscc_info_DeleteJobReply_elastic_5fjob_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::elasticjob::proto::_DeleteJobReply_default_instance_;
    new (ptr) ::elasticjob::proto::DeleteJobReply();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::elasticjob::proto::DeleteJobReply::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_DeleteJobReply_elastic_5fjob_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_DeleteJobReply_elastic_5fjob_2eproto}, {
      &scc_info_ErrorCode_elastic_5fjob_2eproto.base,}};

static void InitDefaultsscc_info_DeleteJobRequest_elastic_5fjob_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::elasticjob::proto::_DeleteJobRequest_default_instance_;
    new (ptr) ::elasticjob::proto::DeleteJobRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::elasticjob::proto::DeleteJobRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_DeleteJobRequest_elastic_5fjob_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_DeleteJobRequest_elastic_5fjob_2eproto}, {}};

static void InitDefaultsscc_info_ErrorCode_elastic_5fjob_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::elasticjob::proto::_ErrorCode_default_instance_;
    new (ptr) ::elasticjob::proto::ErrorCode();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::elasticjob::proto::ErrorCode::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ErrorCode_elastic_5fjob_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ErrorCode_elastic_5fjob_2eproto}, {}};

static void InitDefaultsscc_info_GetJobResultReply_elastic_5fjob_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::elasticjob::proto::_GetJobResultReply_default_instance_;
    new (ptr) ::elasticjob::proto::GetJobResultReply();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::elasticjob::proto::GetJobResultReply::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_GetJobResultReply_elastic_5fjob_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_GetJobResultReply_elastic_5fjob_2eproto}, {
      &scc_info_ErrorCode_elastic_5fjob_2eproto.base,
      &scc_info_JobResult_elastic_5fjob_2eproto.base,}};

static void InitDefaultsscc_info_GetJobResultRequest_elastic_5fjob_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::elasticjob::proto::_GetJobResultRequest_default_instance_;
    new (ptr) ::elasticjob::proto::GetJobResultRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::elasticjob::proto::GetJobResultRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetJobResultRequest_elastic_5fjob_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_GetJobResultRequest_elastic_5fjob_2eproto}, {}};

static void InitDefaultsscc_info_JobInfo_elastic_5fjob_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::elasticjob::proto::_JobInfo_default_instance_;
    new (ptr) ::elasticjob::proto::JobInfo();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::elasticjob::proto::JobInfo::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_JobInfo_elastic_5fjob_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_JobInfo_elastic_5fjob_2eproto}, {}};

static void InitDefaultsscc_info_JobResult_elastic_5fjob_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::elasticjob::proto::_JobResult_default_instance_;
    new (ptr) ::elasticjob::proto::JobResult();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::elasticjob::proto::JobResult::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_JobResult_elastic_5fjob_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_JobResult_elastic_5fjob_2eproto}, {
      &scc_info_ErrorCode_elastic_5fjob_2eproto.base,}};

static void InitDefaultsscc_info_PingRequest_elastic_5fjob_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::elasticjob::proto::_PingRequest_default_instance_;
    new (ptr) ::elasticjob::proto::PingRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::elasticjob::proto::PingRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_PingRequest_elastic_5fjob_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_PingRequest_elastic_5fjob_2eproto}, {}};

static void InitDefaultsscc_info_PongResponse_elastic_5fjob_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::elasticjob::proto::_PongResponse_default_instance_;
    new (ptr) ::elasticjob::proto::PongResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::elasticjob::proto::PongResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_PongResponse_elastic_5fjob_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_PongResponse_elastic_5fjob_2eproto}, {}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_elastic_5fjob_2eproto[11];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_elastic_5fjob_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_elastic_5fjob_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_elastic_5fjob_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::elasticjob::proto::ErrorCode, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::elasticjob::proto::ErrorCode, code_),
  PROTOBUF_FIELD_OFFSET(::elasticjob::proto::ErrorCode, message_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::elasticjob::proto::JobInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::elasticjob::proto::JobInfo, id_),
  PROTOBUF_FIELD_OFFSET(::elasticjob::proto::JobInfo, name_),
  PROTOBUF_FIELD_OFFSET(::elasticjob::proto::JobInfo, category_),
  PROTOBUF_FIELD_OFFSET(::elasticjob::proto::JobInfo, priority_),
  PROTOBUF_FIELD_OFFSET(::elasticjob::proto::JobInfo, param_),
  PROTOBUF_FIELD_OFFSET(::elasticjob::proto::JobInfo, shedule_type_),
  PROTOBUF_FIELD_OFFSET(::elasticjob::proto::JobInfo, shedule_param_),
  PROTOBUF_FIELD_OFFSET(::elasticjob::proto::JobInfo, parallel_strategy_),
  PROTOBUF_FIELD_OFFSET(::elasticjob::proto::JobInfo, retry_strategy_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::elasticjob::proto::JobResult, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::elasticjob::proto::JobResult, id_),
  PROTOBUF_FIELD_OFFSET(::elasticjob::proto::JobResult, job_id_),
  PROTOBUF_FIELD_OFFSET(::elasticjob::proto::JobResult, status_),
  PROTOBUF_FIELD_OFFSET(::elasticjob::proto::JobResult, result_),
  PROTOBUF_FIELD_OFFSET(::elasticjob::proto::JobResult, error_code_),
  PROTOBUF_FIELD_OFFSET(::elasticjob::proto::JobResult, start_time_),
  PROTOBUF_FIELD_OFFSET(::elasticjob::proto::JobResult, finished_time_),
  PROTOBUF_FIELD_OFFSET(::elasticjob::proto::JobResult, failed_count_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::elasticjob::proto::PingRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::elasticjob::proto::PongResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::elasticjob::proto::AddJobRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::elasticjob::proto::AddJobRequest, job_info_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::elasticjob::proto::AddJobReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::elasticjob::proto::AddJobReply, err_code_),
  PROTOBUF_FIELD_OFFSET(::elasticjob::proto::AddJobReply, id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::elasticjob::proto::DeleteJobRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::elasticjob::proto::DeleteJobRequest, id_),
  PROTOBUF_FIELD_OFFSET(::elasticjob::proto::DeleteJobRequest, name_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::elasticjob::proto::DeleteJobReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::elasticjob::proto::DeleteJobReply, err_code_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::elasticjob::proto::GetJobResultRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::elasticjob::proto::GetJobResultRequest, job_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::elasticjob::proto::GetJobResultReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::elasticjob::proto::GetJobResultReply, err_code_),
  PROTOBUF_FIELD_OFFSET(::elasticjob::proto::GetJobResultReply, result_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::elasticjob::proto::ErrorCode)},
  { 7, -1, sizeof(::elasticjob::proto::JobInfo)},
  { 21, -1, sizeof(::elasticjob::proto::JobResult)},
  { 34, -1, sizeof(::elasticjob::proto::PingRequest)},
  { 39, -1, sizeof(::elasticjob::proto::PongResponse)},
  { 44, -1, sizeof(::elasticjob::proto::AddJobRequest)},
  { 50, -1, sizeof(::elasticjob::proto::AddJobReply)},
  { 57, -1, sizeof(::elasticjob::proto::DeleteJobRequest)},
  { 64, -1, sizeof(::elasticjob::proto::DeleteJobReply)},
  { 70, -1, sizeof(::elasticjob::proto::GetJobResultRequest)},
  { 76, -1, sizeof(::elasticjob::proto::GetJobResultReply)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::elasticjob::proto::_ErrorCode_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::elasticjob::proto::_JobInfo_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::elasticjob::proto::_JobResult_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::elasticjob::proto::_PingRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::elasticjob::proto::_PongResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::elasticjob::proto::_AddJobRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::elasticjob::proto::_AddJobReply_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::elasticjob::proto::_DeleteJobRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::elasticjob::proto::_DeleteJobReply_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::elasticjob::proto::_GetJobResultRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::elasticjob::proto::_GetJobResultReply_default_instance_),
};

const char descriptor_table_protodef_elastic_5fjob_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\021elastic_job.proto\022\020elasticjob.proto\"*\n"
  "\tErrorCode\022\014\n\004code\030\001 \001(\t\022\017\n\007message\030\002 \001("
  "\t\"\266\001\n\007JobInfo\022\n\n\002id\030\001 \001(\t\022\014\n\004name\030\002 \001(\t\022"
  "\020\n\010category\030\003 \001(\t\022\020\n\010priority\030\004 \001(\005\022\r\n\005p"
  "aram\030\005 \001(\t\022\024\n\014shedule_type\030\006 \001(\005\022\025\n\rshed"
  "ule_param\030\007 \001(\t\022\031\n\021parallel_strategy\030\010 \001"
  "(\t\022\026\n\016retry_strategy\030\t \001(\t\"\271\001\n\tJobResult"
  "\022\n\n\002id\030\001 \001(\t\022\016\n\006job_id\030\002 \001(\t\022\016\n\006status\030\003"
  " \001(\005\022\016\n\006result\030\004 \001(\t\022/\n\nerror_code\030\005 \001(\013"
  "2\033.elasticjob.proto.ErrorCode\022\022\n\nstart_t"
  "ime\030\006 \001(\003\022\025\n\rfinished_time\030\007 \001(\003\022\024\n\014fail"
  "ed_count\030\010 \001(\005\"\r\n\013PingRequest\"\016\n\014PongRes"
  "ponse\"<\n\rAddJobRequest\022+\n\010job_info\030\001 \001(\013"
  "2\031.elasticjob.proto.JobInfo\"H\n\013AddJobRep"
  "ly\022-\n\010err_code\030\001 \001(\0132\033.elasticjob.proto."
  "ErrorCode\022\n\n\002id\030\002 \001(\t\",\n\020DeleteJobReques"
  "t\022\n\n\002id\030\001 \001(\t\022\014\n\004name\030\002 \001(\t\"\?\n\016DeleteJob"
  "Reply\022-\n\010err_code\030\001 \001(\0132\033.elasticjob.pro"
  "to.ErrorCode\"%\n\023GetJobResultRequest\022\016\n\006j"
  "ob_id\030\001 \001(\t\"o\n\021GetJobResultReply\022-\n\010err_"
  "code\030\001 \001(\0132\033.elasticjob.proto.ErrorCode\022"
  "+\n\006result\030\002 \001(\0132\033.elasticjob.proto.JobRe"
  "sult2\333\002\n\021ElasticJobService\022G\n\004Ping\022\035.ela"
  "sticjob.proto.PingRequest\032\036.elasticjob.p"
  "roto.PongResponse\"\000\022J\n\006AddJob\022\037.elasticj"
  "ob.proto.AddJobRequest\032\035.elasticjob.prot"
  "o.AddJobReply\"\000\022S\n\tDeleteJob\022\".elasticjo"
  "b.proto.DeleteJobRequest\032 .elasticjob.pr"
  "oto.DeleteJobReply\"\000\022\\\n\014GetJobResult\022%.e"
  "lasticjob.proto.GetJobResultRequest\032#.el"
  "asticjob.proto.GetJobResultReply\"\000b\006prot"
  "o3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_elastic_5fjob_2eproto_deps[1] = {
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_elastic_5fjob_2eproto_sccs[11] = {
  &scc_info_AddJobReply_elastic_5fjob_2eproto.base,
  &scc_info_AddJobRequest_elastic_5fjob_2eproto.base,
  &scc_info_DeleteJobReply_elastic_5fjob_2eproto.base,
  &scc_info_DeleteJobRequest_elastic_5fjob_2eproto.base,
  &scc_info_ErrorCode_elastic_5fjob_2eproto.base,
  &scc_info_GetJobResultReply_elastic_5fjob_2eproto.base,
  &scc_info_GetJobResultRequest_elastic_5fjob_2eproto.base,
  &scc_info_JobInfo_elastic_5fjob_2eproto.base,
  &scc_info_JobResult_elastic_5fjob_2eproto.base,
  &scc_info_PingRequest_elastic_5fjob_2eproto.base,
  &scc_info_PongResponse_elastic_5fjob_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_elastic_5fjob_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_elastic_5fjob_2eproto = {
  false, false, descriptor_table_protodef_elastic_5fjob_2eproto, "elastic_job.proto", 1242,
  &descriptor_table_elastic_5fjob_2eproto_once, descriptor_table_elastic_5fjob_2eproto_sccs, descriptor_table_elastic_5fjob_2eproto_deps, 11, 0,
  schemas, file_default_instances, TableStruct_elastic_5fjob_2eproto::offsets,
  file_level_metadata_elastic_5fjob_2eproto, 11, file_level_enum_descriptors_elastic_5fjob_2eproto, file_level_service_descriptors_elastic_5fjob_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_elastic_5fjob_2eproto = (static_cast<void>(::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_elastic_5fjob_2eproto)), true);
namespace elasticjob {
namespace proto {

// ===================================================================

void ErrorCode::InitAsDefaultInstance() {
}
class ErrorCode::_Internal {
 public:
};

ErrorCode::ErrorCode(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:elasticjob.proto.ErrorCode)
}
ErrorCode::ErrorCode(const ErrorCode& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  code_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_code().empty()) {
    code_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_code(),
      GetArena());
  }
  message_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_message().empty()) {
    message_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_message(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:elasticjob.proto.ErrorCode)
}

void ErrorCode::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ErrorCode_elastic_5fjob_2eproto.base);
  code_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  message_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

ErrorCode::~ErrorCode() {
  // @@protoc_insertion_point(destructor:elasticjob.proto.ErrorCode)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ErrorCode::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  code_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  message_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ErrorCode::ArenaDtor(void* object) {
  ErrorCode* _this = reinterpret_cast< ErrorCode* >(object);
  (void)_this;
}
void ErrorCode::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ErrorCode::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ErrorCode& ErrorCode::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ErrorCode_elastic_5fjob_2eproto.base);
  return *internal_default_instance();
}


void ErrorCode::Clear() {
// @@protoc_insertion_point(message_clear_start:elasticjob.proto.ErrorCode)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  code_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  message_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ErrorCode::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string code = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_code();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "elasticjob.proto.ErrorCode.code"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string message = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_message();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "elasticjob.proto.ErrorCode.message"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ErrorCode::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:elasticjob.proto.ErrorCode)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string code = 1;
  if (this->code().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_code().data(), static_cast<int>(this->_internal_code().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "elasticjob.proto.ErrorCode.code");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_code(), target);
  }

  // string message = 2;
  if (this->message().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_message().data(), static_cast<int>(this->_internal_message().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "elasticjob.proto.ErrorCode.message");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_message(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:elasticjob.proto.ErrorCode)
  return target;
}

size_t ErrorCode::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:elasticjob.proto.ErrorCode)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string code = 1;
  if (this->code().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_code());
  }

  // string message = 2;
  if (this->message().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_message());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ErrorCode::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:elasticjob.proto.ErrorCode)
  GOOGLE_DCHECK_NE(&from, this);
  const ErrorCode* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ErrorCode>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:elasticjob.proto.ErrorCode)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:elasticjob.proto.ErrorCode)
    MergeFrom(*source);
  }
}

void ErrorCode::MergeFrom(const ErrorCode& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:elasticjob.proto.ErrorCode)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.code().size() > 0) {
    _internal_set_code(from._internal_code());
  }
  if (from.message().size() > 0) {
    _internal_set_message(from._internal_message());
  }
}

void ErrorCode::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:elasticjob.proto.ErrorCode)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ErrorCode::CopyFrom(const ErrorCode& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:elasticjob.proto.ErrorCode)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ErrorCode::IsInitialized() const {
  return true;
}

void ErrorCode::InternalSwap(ErrorCode* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  code_.Swap(&other->code_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  message_.Swap(&other->message_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata ErrorCode::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void JobInfo::InitAsDefaultInstance() {
}
class JobInfo::_Internal {
 public:
};

JobInfo::JobInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:elasticjob.proto.JobInfo)
}
JobInfo::JobInfo(const JobInfo& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_id().empty()) {
    id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_id(),
      GetArena());
  }
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_name(),
      GetArena());
  }
  category_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_category().empty()) {
    category_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_category(),
      GetArena());
  }
  param_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_param().empty()) {
    param_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_param(),
      GetArena());
  }
  shedule_param_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_shedule_param().empty()) {
    shedule_param_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_shedule_param(),
      GetArena());
  }
  parallel_strategy_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_parallel_strategy().empty()) {
    parallel_strategy_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_parallel_strategy(),
      GetArena());
  }
  retry_strategy_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_retry_strategy().empty()) {
    retry_strategy_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_retry_strategy(),
      GetArena());
  }
  ::memcpy(&priority_, &from.priority_,
    static_cast<size_t>(reinterpret_cast<char*>(&shedule_type_) -
    reinterpret_cast<char*>(&priority_)) + sizeof(shedule_type_));
  // @@protoc_insertion_point(copy_constructor:elasticjob.proto.JobInfo)
}

void JobInfo::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_JobInfo_elastic_5fjob_2eproto.base);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  category_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  param_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  shedule_param_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  parallel_strategy_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  retry_strategy_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&priority_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&shedule_type_) -
      reinterpret_cast<char*>(&priority_)) + sizeof(shedule_type_));
}

JobInfo::~JobInfo() {
  // @@protoc_insertion_point(destructor:elasticjob.proto.JobInfo)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void JobInfo::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  category_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  param_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  shedule_param_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  parallel_strategy_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  retry_strategy_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void JobInfo::ArenaDtor(void* object) {
  JobInfo* _this = reinterpret_cast< JobInfo* >(object);
  (void)_this;
}
void JobInfo::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void JobInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const JobInfo& JobInfo::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_JobInfo_elastic_5fjob_2eproto.base);
  return *internal_default_instance();
}


void JobInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:elasticjob.proto.JobInfo)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  category_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  param_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  shedule_param_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  parallel_strategy_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  retry_strategy_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::memset(&priority_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&shedule_type_) -
      reinterpret_cast<char*>(&priority_)) + sizeof(shedule_type_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* JobInfo::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "elasticjob.proto.JobInfo.id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string name = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "elasticjob.proto.JobInfo.name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string category = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_category();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "elasticjob.proto.JobInfo.category"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 priority = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          priority_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string param = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          auto str = _internal_mutable_param();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "elasticjob.proto.JobInfo.param"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 shedule_type = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          shedule_type_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string shedule_param = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          auto str = _internal_mutable_shedule_param();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "elasticjob.proto.JobInfo.shedule_param"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string parallel_strategy = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 66)) {
          auto str = _internal_mutable_parallel_strategy();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "elasticjob.proto.JobInfo.parallel_strategy"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string retry_strategy = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 74)) {
          auto str = _internal_mutable_retry_strategy();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "elasticjob.proto.JobInfo.retry_strategy"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* JobInfo::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:elasticjob.proto.JobInfo)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "elasticjob.proto.JobInfo.id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_id(), target);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "elasticjob.proto.JobInfo.name");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_name(), target);
  }

  // string category = 3;
  if (this->category().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_category().data(), static_cast<int>(this->_internal_category().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "elasticjob.proto.JobInfo.category");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_category(), target);
  }

  // int32 priority = 4;
  if (this->priority() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(4, this->_internal_priority(), target);
  }

  // string param = 5;
  if (this->param().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_param().data(), static_cast<int>(this->_internal_param().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "elasticjob.proto.JobInfo.param");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_param(), target);
  }

  // int32 shedule_type = 6;
  if (this->shedule_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(6, this->_internal_shedule_type(), target);
  }

  // string shedule_param = 7;
  if (this->shedule_param().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_shedule_param().data(), static_cast<int>(this->_internal_shedule_param().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "elasticjob.proto.JobInfo.shedule_param");
    target = stream->WriteStringMaybeAliased(
        7, this->_internal_shedule_param(), target);
  }

  // string parallel_strategy = 8;
  if (this->parallel_strategy().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_parallel_strategy().data(), static_cast<int>(this->_internal_parallel_strategy().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "elasticjob.proto.JobInfo.parallel_strategy");
    target = stream->WriteStringMaybeAliased(
        8, this->_internal_parallel_strategy(), target);
  }

  // string retry_strategy = 9;
  if (this->retry_strategy().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_retry_strategy().data(), static_cast<int>(this->_internal_retry_strategy().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "elasticjob.proto.JobInfo.retry_strategy");
    target = stream->WriteStringMaybeAliased(
        9, this->_internal_retry_strategy(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:elasticjob.proto.JobInfo)
  return target;
}

size_t JobInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:elasticjob.proto.JobInfo)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  // string name = 2;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // string category = 3;
  if (this->category().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_category());
  }

  // string param = 5;
  if (this->param().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_param());
  }

  // string shedule_param = 7;
  if (this->shedule_param().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_shedule_param());
  }

  // string parallel_strategy = 8;
  if (this->parallel_strategy().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_parallel_strategy());
  }

  // string retry_strategy = 9;
  if (this->retry_strategy().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_retry_strategy());
  }

  // int32 priority = 4;
  if (this->priority() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_priority());
  }

  // int32 shedule_type = 6;
  if (this->shedule_type() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_shedule_type());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void JobInfo::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:elasticjob.proto.JobInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const JobInfo* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<JobInfo>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:elasticjob.proto.JobInfo)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:elasticjob.proto.JobInfo)
    MergeFrom(*source);
  }
}

void JobInfo::MergeFrom(const JobInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:elasticjob.proto.JobInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id().size() > 0) {
    _internal_set_id(from._internal_id());
  }
  if (from.name().size() > 0) {
    _internal_set_name(from._internal_name());
  }
  if (from.category().size() > 0) {
    _internal_set_category(from._internal_category());
  }
  if (from.param().size() > 0) {
    _internal_set_param(from._internal_param());
  }
  if (from.shedule_param().size() > 0) {
    _internal_set_shedule_param(from._internal_shedule_param());
  }
  if (from.parallel_strategy().size() > 0) {
    _internal_set_parallel_strategy(from._internal_parallel_strategy());
  }
  if (from.retry_strategy().size() > 0) {
    _internal_set_retry_strategy(from._internal_retry_strategy());
  }
  if (from.priority() != 0) {
    _internal_set_priority(from._internal_priority());
  }
  if (from.shedule_type() != 0) {
    _internal_set_shedule_type(from._internal_shedule_type());
  }
}

void JobInfo::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:elasticjob.proto.JobInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void JobInfo::CopyFrom(const JobInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:elasticjob.proto.JobInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool JobInfo::IsInitialized() const {
  return true;
}

void JobInfo::InternalSwap(JobInfo* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  id_.Swap(&other->id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  category_.Swap(&other->category_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  param_.Swap(&other->param_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  shedule_param_.Swap(&other->shedule_param_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  parallel_strategy_.Swap(&other->parallel_strategy_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  retry_strategy_.Swap(&other->retry_strategy_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(JobInfo, shedule_type_)
      + sizeof(JobInfo::shedule_type_)
      - PROTOBUF_FIELD_OFFSET(JobInfo, priority_)>(
          reinterpret_cast<char*>(&priority_),
          reinterpret_cast<char*>(&other->priority_));
}

::PROTOBUF_NAMESPACE_ID::Metadata JobInfo::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void JobResult::InitAsDefaultInstance() {
  ::elasticjob::proto::_JobResult_default_instance_._instance.get_mutable()->error_code_ = const_cast< ::elasticjob::proto::ErrorCode*>(
      ::elasticjob::proto::ErrorCode::internal_default_instance());
}
class JobResult::_Internal {
 public:
  static const ::elasticjob::proto::ErrorCode& error_code(const JobResult* msg);
};

const ::elasticjob::proto::ErrorCode&
JobResult::_Internal::error_code(const JobResult* msg) {
  return *msg->error_code_;
}
JobResult::JobResult(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:elasticjob.proto.JobResult)
}
JobResult::JobResult(const JobResult& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_id().empty()) {
    id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_id(),
      GetArena());
  }
  job_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_job_id().empty()) {
    job_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_job_id(),
      GetArena());
  }
  result_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_result().empty()) {
    result_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_result(),
      GetArena());
  }
  if (from._internal_has_error_code()) {
    error_code_ = new ::elasticjob::proto::ErrorCode(*from.error_code_);
  } else {
    error_code_ = nullptr;
  }
  ::memcpy(&status_, &from.status_,
    static_cast<size_t>(reinterpret_cast<char*>(&finished_time_) -
    reinterpret_cast<char*>(&status_)) + sizeof(finished_time_));
  // @@protoc_insertion_point(copy_constructor:elasticjob.proto.JobResult)
}

void JobResult::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_JobResult_elastic_5fjob_2eproto.base);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  job_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  result_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&error_code_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&finished_time_) -
      reinterpret_cast<char*>(&error_code_)) + sizeof(finished_time_));
}

JobResult::~JobResult() {
  // @@protoc_insertion_point(destructor:elasticjob.proto.JobResult)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void JobResult::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  job_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  result_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete error_code_;
}

void JobResult::ArenaDtor(void* object) {
  JobResult* _this = reinterpret_cast< JobResult* >(object);
  (void)_this;
}
void JobResult::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void JobResult::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const JobResult& JobResult::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_JobResult_elastic_5fjob_2eproto.base);
  return *internal_default_instance();
}


void JobResult::Clear() {
// @@protoc_insertion_point(message_clear_start:elasticjob.proto.JobResult)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  job_id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  result_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  if (GetArena() == nullptr && error_code_ != nullptr) {
    delete error_code_;
  }
  error_code_ = nullptr;
  ::memset(&status_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&finished_time_) -
      reinterpret_cast<char*>(&status_)) + sizeof(finished_time_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* JobResult::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "elasticjob.proto.JobResult.id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string job_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_job_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "elasticjob.proto.JobResult.job_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 status = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          status_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string result = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_result();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "elasticjob.proto.JobResult.result"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .elasticjob.proto.ErrorCode error_code = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_error_code(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 start_time = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          start_time_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 finished_time = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 56)) {
          finished_time_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 failed_count = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 64)) {
          failed_count_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* JobResult::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:elasticjob.proto.JobResult)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "elasticjob.proto.JobResult.id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_id(), target);
  }

  // string job_id = 2;
  if (this->job_id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_job_id().data(), static_cast<int>(this->_internal_job_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "elasticjob.proto.JobResult.job_id");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_job_id(), target);
  }

  // int32 status = 3;
  if (this->status() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->_internal_status(), target);
  }

  // string result = 4;
  if (this->result().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_result().data(), static_cast<int>(this->_internal_result().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "elasticjob.proto.JobResult.result");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_result(), target);
  }

  // .elasticjob.proto.ErrorCode error_code = 5;
  if (this->has_error_code()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        5, _Internal::error_code(this), target, stream);
  }

  // int64 start_time = 6;
  if (this->start_time() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(6, this->_internal_start_time(), target);
  }

  // int64 finished_time = 7;
  if (this->finished_time() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(7, this->_internal_finished_time(), target);
  }

  // int32 failed_count = 8;
  if (this->failed_count() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(8, this->_internal_failed_count(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:elasticjob.proto.JobResult)
  return target;
}

size_t JobResult::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:elasticjob.proto.JobResult)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  // string job_id = 2;
  if (this->job_id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_job_id());
  }

  // string result = 4;
  if (this->result().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_result());
  }

  // .elasticjob.proto.ErrorCode error_code = 5;
  if (this->has_error_code()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *error_code_);
  }

  // int32 status = 3;
  if (this->status() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_status());
  }

  // int32 failed_count = 8;
  if (this->failed_count() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_failed_count());
  }

  // int64 start_time = 6;
  if (this->start_time() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_start_time());
  }

  // int64 finished_time = 7;
  if (this->finished_time() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_finished_time());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void JobResult::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:elasticjob.proto.JobResult)
  GOOGLE_DCHECK_NE(&from, this);
  const JobResult* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<JobResult>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:elasticjob.proto.JobResult)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:elasticjob.proto.JobResult)
    MergeFrom(*source);
  }
}

void JobResult::MergeFrom(const JobResult& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:elasticjob.proto.JobResult)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id().size() > 0) {
    _internal_set_id(from._internal_id());
  }
  if (from.job_id().size() > 0) {
    _internal_set_job_id(from._internal_job_id());
  }
  if (from.result().size() > 0) {
    _internal_set_result(from._internal_result());
  }
  if (from.has_error_code()) {
    _internal_mutable_error_code()->::elasticjob::proto::ErrorCode::MergeFrom(from._internal_error_code());
  }
  if (from.status() != 0) {
    _internal_set_status(from._internal_status());
  }
  if (from.failed_count() != 0) {
    _internal_set_failed_count(from._internal_failed_count());
  }
  if (from.start_time() != 0) {
    _internal_set_start_time(from._internal_start_time());
  }
  if (from.finished_time() != 0) {
    _internal_set_finished_time(from._internal_finished_time());
  }
}

void JobResult::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:elasticjob.proto.JobResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void JobResult::CopyFrom(const JobResult& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:elasticjob.proto.JobResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool JobResult::IsInitialized() const {
  return true;
}

void JobResult::InternalSwap(JobResult* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  id_.Swap(&other->id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  job_id_.Swap(&other->job_id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  result_.Swap(&other->result_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(JobResult, finished_time_)
      + sizeof(JobResult::finished_time_)
      - PROTOBUF_FIELD_OFFSET(JobResult, error_code_)>(
          reinterpret_cast<char*>(&error_code_),
          reinterpret_cast<char*>(&other->error_code_));
}

::PROTOBUF_NAMESPACE_ID::Metadata JobResult::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void PingRequest::InitAsDefaultInstance() {
}
class PingRequest::_Internal {
 public:
};

PingRequest::PingRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:elasticjob.proto.PingRequest)
}
PingRequest::PingRequest(const PingRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:elasticjob.proto.PingRequest)
}

void PingRequest::SharedCtor() {
}

PingRequest::~PingRequest() {
  // @@protoc_insertion_point(destructor:elasticjob.proto.PingRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void PingRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void PingRequest::ArenaDtor(void* object) {
  PingRequest* _this = reinterpret_cast< PingRequest* >(object);
  (void)_this;
}
void PingRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PingRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PingRequest& PingRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_PingRequest_elastic_5fjob_2eproto.base);
  return *internal_default_instance();
}


void PingRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:elasticjob.proto.PingRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PingRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* PingRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:elasticjob.proto.PingRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:elasticjob.proto.PingRequest)
  return target;
}

size_t PingRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:elasticjob.proto.PingRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PingRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:elasticjob.proto.PingRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const PingRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<PingRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:elasticjob.proto.PingRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:elasticjob.proto.PingRequest)
    MergeFrom(*source);
  }
}

void PingRequest::MergeFrom(const PingRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:elasticjob.proto.PingRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void PingRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:elasticjob.proto.PingRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PingRequest::CopyFrom(const PingRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:elasticjob.proto.PingRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PingRequest::IsInitialized() const {
  return true;
}

void PingRequest::InternalSwap(PingRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PingRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void PongResponse::InitAsDefaultInstance() {
}
class PongResponse::_Internal {
 public:
};

PongResponse::PongResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:elasticjob.proto.PongResponse)
}
PongResponse::PongResponse(const PongResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:elasticjob.proto.PongResponse)
}

void PongResponse::SharedCtor() {
}

PongResponse::~PongResponse() {
  // @@protoc_insertion_point(destructor:elasticjob.proto.PongResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void PongResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void PongResponse::ArenaDtor(void* object) {
  PongResponse* _this = reinterpret_cast< PongResponse* >(object);
  (void)_this;
}
void PongResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PongResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PongResponse& PongResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_PongResponse_elastic_5fjob_2eproto.base);
  return *internal_default_instance();
}


void PongResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:elasticjob.proto.PongResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PongResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* PongResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:elasticjob.proto.PongResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:elasticjob.proto.PongResponse)
  return target;
}

size_t PongResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:elasticjob.proto.PongResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PongResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:elasticjob.proto.PongResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const PongResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<PongResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:elasticjob.proto.PongResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:elasticjob.proto.PongResponse)
    MergeFrom(*source);
  }
}

void PongResponse::MergeFrom(const PongResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:elasticjob.proto.PongResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void PongResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:elasticjob.proto.PongResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PongResponse::CopyFrom(const PongResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:elasticjob.proto.PongResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PongResponse::IsInitialized() const {
  return true;
}

void PongResponse::InternalSwap(PongResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PongResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void AddJobRequest::InitAsDefaultInstance() {
  ::elasticjob::proto::_AddJobRequest_default_instance_._instance.get_mutable()->job_info_ = const_cast< ::elasticjob::proto::JobInfo*>(
      ::elasticjob::proto::JobInfo::internal_default_instance());
}
class AddJobRequest::_Internal {
 public:
  static const ::elasticjob::proto::JobInfo& job_info(const AddJobRequest* msg);
};

const ::elasticjob::proto::JobInfo&
AddJobRequest::_Internal::job_info(const AddJobRequest* msg) {
  return *msg->job_info_;
}
AddJobRequest::AddJobRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:elasticjob.proto.AddJobRequest)
}
AddJobRequest::AddJobRequest(const AddJobRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_job_info()) {
    job_info_ = new ::elasticjob::proto::JobInfo(*from.job_info_);
  } else {
    job_info_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:elasticjob.proto.AddJobRequest)
}

void AddJobRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_AddJobRequest_elastic_5fjob_2eproto.base);
  job_info_ = nullptr;
}

AddJobRequest::~AddJobRequest() {
  // @@protoc_insertion_point(destructor:elasticjob.proto.AddJobRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void AddJobRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete job_info_;
}

void AddJobRequest::ArenaDtor(void* object) {
  AddJobRequest* _this = reinterpret_cast< AddJobRequest* >(object);
  (void)_this;
}
void AddJobRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void AddJobRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const AddJobRequest& AddJobRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_AddJobRequest_elastic_5fjob_2eproto.base);
  return *internal_default_instance();
}


void AddJobRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:elasticjob.proto.AddJobRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && job_info_ != nullptr) {
    delete job_info_;
  }
  job_info_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AddJobRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .elasticjob.proto.JobInfo job_info = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_job_info(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* AddJobRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:elasticjob.proto.AddJobRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .elasticjob.proto.JobInfo job_info = 1;
  if (this->has_job_info()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::job_info(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:elasticjob.proto.AddJobRequest)
  return target;
}

size_t AddJobRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:elasticjob.proto.AddJobRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .elasticjob.proto.JobInfo job_info = 1;
  if (this->has_job_info()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *job_info_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AddJobRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:elasticjob.proto.AddJobRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const AddJobRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<AddJobRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:elasticjob.proto.AddJobRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:elasticjob.proto.AddJobRequest)
    MergeFrom(*source);
  }
}

void AddJobRequest::MergeFrom(const AddJobRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:elasticjob.proto.AddJobRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_job_info()) {
    _internal_mutable_job_info()->::elasticjob::proto::JobInfo::MergeFrom(from._internal_job_info());
  }
}

void AddJobRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:elasticjob.proto.AddJobRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AddJobRequest::CopyFrom(const AddJobRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:elasticjob.proto.AddJobRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddJobRequest::IsInitialized() const {
  return true;
}

void AddJobRequest::InternalSwap(AddJobRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(job_info_, other->job_info_);
}

::PROTOBUF_NAMESPACE_ID::Metadata AddJobRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void AddJobReply::InitAsDefaultInstance() {
  ::elasticjob::proto::_AddJobReply_default_instance_._instance.get_mutable()->err_code_ = const_cast< ::elasticjob::proto::ErrorCode*>(
      ::elasticjob::proto::ErrorCode::internal_default_instance());
}
class AddJobReply::_Internal {
 public:
  static const ::elasticjob::proto::ErrorCode& err_code(const AddJobReply* msg);
};

const ::elasticjob::proto::ErrorCode&
AddJobReply::_Internal::err_code(const AddJobReply* msg) {
  return *msg->err_code_;
}
AddJobReply::AddJobReply(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:elasticjob.proto.AddJobReply)
}
AddJobReply::AddJobReply(const AddJobReply& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_id().empty()) {
    id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_id(),
      GetArena());
  }
  if (from._internal_has_err_code()) {
    err_code_ = new ::elasticjob::proto::ErrorCode(*from.err_code_);
  } else {
    err_code_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:elasticjob.proto.AddJobReply)
}

void AddJobReply::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_AddJobReply_elastic_5fjob_2eproto.base);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  err_code_ = nullptr;
}

AddJobReply::~AddJobReply() {
  // @@protoc_insertion_point(destructor:elasticjob.proto.AddJobReply)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void AddJobReply::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete err_code_;
}

void AddJobReply::ArenaDtor(void* object) {
  AddJobReply* _this = reinterpret_cast< AddJobReply* >(object);
  (void)_this;
}
void AddJobReply::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void AddJobReply::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const AddJobReply& AddJobReply::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_AddJobReply_elastic_5fjob_2eproto.base);
  return *internal_default_instance();
}


void AddJobReply::Clear() {
// @@protoc_insertion_point(message_clear_start:elasticjob.proto.AddJobReply)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  if (GetArena() == nullptr && err_code_ != nullptr) {
    delete err_code_;
  }
  err_code_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AddJobReply::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .elasticjob.proto.ErrorCode err_code = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_err_code(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "elasticjob.proto.AddJobReply.id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* AddJobReply::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:elasticjob.proto.AddJobReply)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .elasticjob.proto.ErrorCode err_code = 1;
  if (this->has_err_code()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::err_code(this), target, stream);
  }

  // string id = 2;
  if (this->id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "elasticjob.proto.AddJobReply.id");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:elasticjob.proto.AddJobReply)
  return target;
}

size_t AddJobReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:elasticjob.proto.AddJobReply)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string id = 2;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  // .elasticjob.proto.ErrorCode err_code = 1;
  if (this->has_err_code()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *err_code_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AddJobReply::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:elasticjob.proto.AddJobReply)
  GOOGLE_DCHECK_NE(&from, this);
  const AddJobReply* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<AddJobReply>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:elasticjob.proto.AddJobReply)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:elasticjob.proto.AddJobReply)
    MergeFrom(*source);
  }
}

void AddJobReply::MergeFrom(const AddJobReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:elasticjob.proto.AddJobReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id().size() > 0) {
    _internal_set_id(from._internal_id());
  }
  if (from.has_err_code()) {
    _internal_mutable_err_code()->::elasticjob::proto::ErrorCode::MergeFrom(from._internal_err_code());
  }
}

void AddJobReply::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:elasticjob.proto.AddJobReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AddJobReply::CopyFrom(const AddJobReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:elasticjob.proto.AddJobReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddJobReply::IsInitialized() const {
  return true;
}

void AddJobReply::InternalSwap(AddJobReply* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  id_.Swap(&other->id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(err_code_, other->err_code_);
}

::PROTOBUF_NAMESPACE_ID::Metadata AddJobReply::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void DeleteJobRequest::InitAsDefaultInstance() {
}
class DeleteJobRequest::_Internal {
 public:
};

DeleteJobRequest::DeleteJobRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:elasticjob.proto.DeleteJobRequest)
}
DeleteJobRequest::DeleteJobRequest(const DeleteJobRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_id().empty()) {
    id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_id(),
      GetArena());
  }
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_name(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:elasticjob.proto.DeleteJobRequest)
}

void DeleteJobRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_DeleteJobRequest_elastic_5fjob_2eproto.base);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

DeleteJobRequest::~DeleteJobRequest() {
  // @@protoc_insertion_point(destructor:elasticjob.proto.DeleteJobRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void DeleteJobRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void DeleteJobRequest::ArenaDtor(void* object) {
  DeleteJobRequest* _this = reinterpret_cast< DeleteJobRequest* >(object);
  (void)_this;
}
void DeleteJobRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DeleteJobRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DeleteJobRequest& DeleteJobRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_DeleteJobRequest_elastic_5fjob_2eproto.base);
  return *internal_default_instance();
}


void DeleteJobRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:elasticjob.proto.DeleteJobRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DeleteJobRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "elasticjob.proto.DeleteJobRequest.id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string name = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "elasticjob.proto.DeleteJobRequest.name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DeleteJobRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:elasticjob.proto.DeleteJobRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "elasticjob.proto.DeleteJobRequest.id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_id(), target);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "elasticjob.proto.DeleteJobRequest.name");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_name(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:elasticjob.proto.DeleteJobRequest)
  return target;
}

size_t DeleteJobRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:elasticjob.proto.DeleteJobRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  // string name = 2;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeleteJobRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:elasticjob.proto.DeleteJobRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const DeleteJobRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DeleteJobRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:elasticjob.proto.DeleteJobRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:elasticjob.proto.DeleteJobRequest)
    MergeFrom(*source);
  }
}

void DeleteJobRequest::MergeFrom(const DeleteJobRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:elasticjob.proto.DeleteJobRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id().size() > 0) {
    _internal_set_id(from._internal_id());
  }
  if (from.name().size() > 0) {
    _internal_set_name(from._internal_name());
  }
}

void DeleteJobRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:elasticjob.proto.DeleteJobRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteJobRequest::CopyFrom(const DeleteJobRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:elasticjob.proto.DeleteJobRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteJobRequest::IsInitialized() const {
  return true;
}

void DeleteJobRequest::InternalSwap(DeleteJobRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  id_.Swap(&other->id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata DeleteJobRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void DeleteJobReply::InitAsDefaultInstance() {
  ::elasticjob::proto::_DeleteJobReply_default_instance_._instance.get_mutable()->err_code_ = const_cast< ::elasticjob::proto::ErrorCode*>(
      ::elasticjob::proto::ErrorCode::internal_default_instance());
}
class DeleteJobReply::_Internal {
 public:
  static const ::elasticjob::proto::ErrorCode& err_code(const DeleteJobReply* msg);
};

const ::elasticjob::proto::ErrorCode&
DeleteJobReply::_Internal::err_code(const DeleteJobReply* msg) {
  return *msg->err_code_;
}
DeleteJobReply::DeleteJobReply(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:elasticjob.proto.DeleteJobReply)
}
DeleteJobReply::DeleteJobReply(const DeleteJobReply& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_err_code()) {
    err_code_ = new ::elasticjob::proto::ErrorCode(*from.err_code_);
  } else {
    err_code_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:elasticjob.proto.DeleteJobReply)
}

void DeleteJobReply::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_DeleteJobReply_elastic_5fjob_2eproto.base);
  err_code_ = nullptr;
}

DeleteJobReply::~DeleteJobReply() {
  // @@protoc_insertion_point(destructor:elasticjob.proto.DeleteJobReply)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void DeleteJobReply::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete err_code_;
}

void DeleteJobReply::ArenaDtor(void* object) {
  DeleteJobReply* _this = reinterpret_cast< DeleteJobReply* >(object);
  (void)_this;
}
void DeleteJobReply::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DeleteJobReply::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DeleteJobReply& DeleteJobReply::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_DeleteJobReply_elastic_5fjob_2eproto.base);
  return *internal_default_instance();
}


void DeleteJobReply::Clear() {
// @@protoc_insertion_point(message_clear_start:elasticjob.proto.DeleteJobReply)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && err_code_ != nullptr) {
    delete err_code_;
  }
  err_code_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DeleteJobReply::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .elasticjob.proto.ErrorCode err_code = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_err_code(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DeleteJobReply::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:elasticjob.proto.DeleteJobReply)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .elasticjob.proto.ErrorCode err_code = 1;
  if (this->has_err_code()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::err_code(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:elasticjob.proto.DeleteJobReply)
  return target;
}

size_t DeleteJobReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:elasticjob.proto.DeleteJobReply)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .elasticjob.proto.ErrorCode err_code = 1;
  if (this->has_err_code()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *err_code_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeleteJobReply::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:elasticjob.proto.DeleteJobReply)
  GOOGLE_DCHECK_NE(&from, this);
  const DeleteJobReply* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DeleteJobReply>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:elasticjob.proto.DeleteJobReply)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:elasticjob.proto.DeleteJobReply)
    MergeFrom(*source);
  }
}

void DeleteJobReply::MergeFrom(const DeleteJobReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:elasticjob.proto.DeleteJobReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_err_code()) {
    _internal_mutable_err_code()->::elasticjob::proto::ErrorCode::MergeFrom(from._internal_err_code());
  }
}

void DeleteJobReply::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:elasticjob.proto.DeleteJobReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteJobReply::CopyFrom(const DeleteJobReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:elasticjob.proto.DeleteJobReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteJobReply::IsInitialized() const {
  return true;
}

void DeleteJobReply::InternalSwap(DeleteJobReply* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(err_code_, other->err_code_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DeleteJobReply::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetJobResultRequest::InitAsDefaultInstance() {
}
class GetJobResultRequest::_Internal {
 public:
};

GetJobResultRequest::GetJobResultRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:elasticjob.proto.GetJobResultRequest)
}
GetJobResultRequest::GetJobResultRequest(const GetJobResultRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  job_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_job_id().empty()) {
    job_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_job_id(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:elasticjob.proto.GetJobResultRequest)
}

void GetJobResultRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetJobResultRequest_elastic_5fjob_2eproto.base);
  job_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

GetJobResultRequest::~GetJobResultRequest() {
  // @@protoc_insertion_point(destructor:elasticjob.proto.GetJobResultRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetJobResultRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  job_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void GetJobResultRequest::ArenaDtor(void* object) {
  GetJobResultRequest* _this = reinterpret_cast< GetJobResultRequest* >(object);
  (void)_this;
}
void GetJobResultRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetJobResultRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetJobResultRequest& GetJobResultRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetJobResultRequest_elastic_5fjob_2eproto.base);
  return *internal_default_instance();
}


void GetJobResultRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:elasticjob.proto.GetJobResultRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  job_id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetJobResultRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string job_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_job_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "elasticjob.proto.GetJobResultRequest.job_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetJobResultRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:elasticjob.proto.GetJobResultRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string job_id = 1;
  if (this->job_id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_job_id().data(), static_cast<int>(this->_internal_job_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "elasticjob.proto.GetJobResultRequest.job_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_job_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:elasticjob.proto.GetJobResultRequest)
  return target;
}

size_t GetJobResultRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:elasticjob.proto.GetJobResultRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string job_id = 1;
  if (this->job_id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_job_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetJobResultRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:elasticjob.proto.GetJobResultRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetJobResultRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetJobResultRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:elasticjob.proto.GetJobResultRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:elasticjob.proto.GetJobResultRequest)
    MergeFrom(*source);
  }
}

void GetJobResultRequest::MergeFrom(const GetJobResultRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:elasticjob.proto.GetJobResultRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.job_id().size() > 0) {
    _internal_set_job_id(from._internal_job_id());
  }
}

void GetJobResultRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:elasticjob.proto.GetJobResultRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetJobResultRequest::CopyFrom(const GetJobResultRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:elasticjob.proto.GetJobResultRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetJobResultRequest::IsInitialized() const {
  return true;
}

void GetJobResultRequest::InternalSwap(GetJobResultRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  job_id_.Swap(&other->job_id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata GetJobResultRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetJobResultReply::InitAsDefaultInstance() {
  ::elasticjob::proto::_GetJobResultReply_default_instance_._instance.get_mutable()->err_code_ = const_cast< ::elasticjob::proto::ErrorCode*>(
      ::elasticjob::proto::ErrorCode::internal_default_instance());
  ::elasticjob::proto::_GetJobResultReply_default_instance_._instance.get_mutable()->result_ = const_cast< ::elasticjob::proto::JobResult*>(
      ::elasticjob::proto::JobResult::internal_default_instance());
}
class GetJobResultReply::_Internal {
 public:
  static const ::elasticjob::proto::ErrorCode& err_code(const GetJobResultReply* msg);
  static const ::elasticjob::proto::JobResult& result(const GetJobResultReply* msg);
};

const ::elasticjob::proto::ErrorCode&
GetJobResultReply::_Internal::err_code(const GetJobResultReply* msg) {
  return *msg->err_code_;
}
const ::elasticjob::proto::JobResult&
GetJobResultReply::_Internal::result(const GetJobResultReply* msg) {
  return *msg->result_;
}
GetJobResultReply::GetJobResultReply(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:elasticjob.proto.GetJobResultReply)
}
GetJobResultReply::GetJobResultReply(const GetJobResultReply& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_err_code()) {
    err_code_ = new ::elasticjob::proto::ErrorCode(*from.err_code_);
  } else {
    err_code_ = nullptr;
  }
  if (from._internal_has_result()) {
    result_ = new ::elasticjob::proto::JobResult(*from.result_);
  } else {
    result_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:elasticjob.proto.GetJobResultReply)
}

void GetJobResultReply::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetJobResultReply_elastic_5fjob_2eproto.base);
  ::memset(&err_code_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&result_) -
      reinterpret_cast<char*>(&err_code_)) + sizeof(result_));
}

GetJobResultReply::~GetJobResultReply() {
  // @@protoc_insertion_point(destructor:elasticjob.proto.GetJobResultReply)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetJobResultReply::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete err_code_;
  if (this != internal_default_instance()) delete result_;
}

void GetJobResultReply::ArenaDtor(void* object) {
  GetJobResultReply* _this = reinterpret_cast< GetJobResultReply* >(object);
  (void)_this;
}
void GetJobResultReply::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetJobResultReply::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetJobResultReply& GetJobResultReply::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetJobResultReply_elastic_5fjob_2eproto.base);
  return *internal_default_instance();
}


void GetJobResultReply::Clear() {
// @@protoc_insertion_point(message_clear_start:elasticjob.proto.GetJobResultReply)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && err_code_ != nullptr) {
    delete err_code_;
  }
  err_code_ = nullptr;
  if (GetArena() == nullptr && result_ != nullptr) {
    delete result_;
  }
  result_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetJobResultReply::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .elasticjob.proto.ErrorCode err_code = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_err_code(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .elasticjob.proto.JobResult result = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_result(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetJobResultReply::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:elasticjob.proto.GetJobResultReply)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .elasticjob.proto.ErrorCode err_code = 1;
  if (this->has_err_code()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::err_code(this), target, stream);
  }

  // .elasticjob.proto.JobResult result = 2;
  if (this->has_result()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::result(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:elasticjob.proto.GetJobResultReply)
  return target;
}

size_t GetJobResultReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:elasticjob.proto.GetJobResultReply)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .elasticjob.proto.ErrorCode err_code = 1;
  if (this->has_err_code()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *err_code_);
  }

  // .elasticjob.proto.JobResult result = 2;
  if (this->has_result()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *result_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetJobResultReply::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:elasticjob.proto.GetJobResultReply)
  GOOGLE_DCHECK_NE(&from, this);
  const GetJobResultReply* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetJobResultReply>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:elasticjob.proto.GetJobResultReply)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:elasticjob.proto.GetJobResultReply)
    MergeFrom(*source);
  }
}

void GetJobResultReply::MergeFrom(const GetJobResultReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:elasticjob.proto.GetJobResultReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_err_code()) {
    _internal_mutable_err_code()->::elasticjob::proto::ErrorCode::MergeFrom(from._internal_err_code());
  }
  if (from.has_result()) {
    _internal_mutable_result()->::elasticjob::proto::JobResult::MergeFrom(from._internal_result());
  }
}

void GetJobResultReply::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:elasticjob.proto.GetJobResultReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetJobResultReply::CopyFrom(const GetJobResultReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:elasticjob.proto.GetJobResultReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetJobResultReply::IsInitialized() const {
  return true;
}

void GetJobResultReply::InternalSwap(GetJobResultReply* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetJobResultReply, result_)
      + sizeof(GetJobResultReply::result_)
      - PROTOBUF_FIELD_OFFSET(GetJobResultReply, err_code_)>(
          reinterpret_cast<char*>(&err_code_),
          reinterpret_cast<char*>(&other->err_code_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GetJobResultReply::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace proto
}  // namespace elasticjob
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::elasticjob::proto::ErrorCode* Arena::CreateMaybeMessage< ::elasticjob::proto::ErrorCode >(Arena* arena) {
  return Arena::CreateMessageInternal< ::elasticjob::proto::ErrorCode >(arena);
}
template<> PROTOBUF_NOINLINE ::elasticjob::proto::JobInfo* Arena::CreateMaybeMessage< ::elasticjob::proto::JobInfo >(Arena* arena) {
  return Arena::CreateMessageInternal< ::elasticjob::proto::JobInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::elasticjob::proto::JobResult* Arena::CreateMaybeMessage< ::elasticjob::proto::JobResult >(Arena* arena) {
  return Arena::CreateMessageInternal< ::elasticjob::proto::JobResult >(arena);
}
template<> PROTOBUF_NOINLINE ::elasticjob::proto::PingRequest* Arena::CreateMaybeMessage< ::elasticjob::proto::PingRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::elasticjob::proto::PingRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::elasticjob::proto::PongResponse* Arena::CreateMaybeMessage< ::elasticjob::proto::PongResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::elasticjob::proto::PongResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::elasticjob::proto::AddJobRequest* Arena::CreateMaybeMessage< ::elasticjob::proto::AddJobRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::elasticjob::proto::AddJobRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::elasticjob::proto::AddJobReply* Arena::CreateMaybeMessage< ::elasticjob::proto::AddJobReply >(Arena* arena) {
  return Arena::CreateMessageInternal< ::elasticjob::proto::AddJobReply >(arena);
}
template<> PROTOBUF_NOINLINE ::elasticjob::proto::DeleteJobRequest* Arena::CreateMaybeMessage< ::elasticjob::proto::DeleteJobRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::elasticjob::proto::DeleteJobRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::elasticjob::proto::DeleteJobReply* Arena::CreateMaybeMessage< ::elasticjob::proto::DeleteJobReply >(Arena* arena) {
  return Arena::CreateMessageInternal< ::elasticjob::proto::DeleteJobReply >(arena);
}
template<> PROTOBUF_NOINLINE ::elasticjob::proto::GetJobResultRequest* Arena::CreateMaybeMessage< ::elasticjob::proto::GetJobResultRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::elasticjob::proto::GetJobResultRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::elasticjob::proto::GetJobResultReply* Arena::CreateMaybeMessage< ::elasticjob::proto::GetJobResultReply >(Arena* arena) {
  return Arena::CreateMessageInternal< ::elasticjob::proto::GetJobResultReply >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
